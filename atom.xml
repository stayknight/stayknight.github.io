<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>云海鹰影</title>
  
  <subtitle>我独自度过的无数个晨昏，用来交换你身边一瞬</subtitle>
  <link href="https://www.chaoswork.cn/atom.xml" rel="self"/>
  
  <link href="https://www.chaoswork.cn/"/>
  <updated>2023-08-25T10:18:54.482Z</updated>
  <id>https://www.chaoswork.cn/</id>
  
  <author>
    <name>云海鹰影</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>工作中遇到的一些数据库问题记录（随时更新）</title>
    <link href="https://www.chaoswork.cn/20230825-1.html"/>
    <id>https://www.chaoswork.cn/20230825-1.html</id>
    <published>2023-08-25T07:20:58.000Z</published>
    <updated>2023-08-25T10:18:54.482Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-delete-where-is-null-JSON-无索引"><a href="#1-delete-where-is-null-JSON-无索引" class="headerlink" title="1. delete where is null + JSON + 无索引"></a>1. delete where is null + JSON + 无索引</h2><p><strong>问题语句</strong>：</p><figure class="highlight sql" data-lang="sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> commodity_feature <span class="keyword">where</span> source<span class="operator">-</span><span class="operator">&gt;&gt;</span>&quot;$.shopId&quot; <span class="keyword">is</span> <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure><p><strong>表现</strong>： 数据库19W条数据，where条件符合790+条，多表级联删除（commodity_feature有几个cascade关联表），耗时几十分钟仍未结束<br><strong>原因分析</strong>：<br>    1. JSON字段没有索引，触发全表扫描。<br>    2. IS NULL应该没有问题，MySQL会执行优化，但是也需要特别关注。<br>       <a href="https://dev.mysql.com/doc/refman/8.0/en/is-null-optimization.html">MySQL is null 优化</a><br>    3. 级联删除会查找关联表中需删除数据，本来就慢。<br><strong>解决办法</strong>：<br>    1. 给JSON字段建立索引</p><figure class="highlight sql" data-lang="sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> commodity_feature <span class="keyword">add</span> <span class="keyword">column</span> shopId <span class="type">char</span>(<span class="number">36</span>) generated always <span class="keyword">as</span> (json_unquote(json_extract(source,<span class="string">&#x27;$.shopId&#x27;</span>))) VIRTUAL;</span><br><span class="line"><span class="keyword">create</span> index `shopId_index` <span class="keyword">on</span> commodity_feature(`shopId`) <span class="keyword">using</span> btree;</span><br></pre></td></tr></table></figure><pre><code>1. 针对级联删除耗时，将commodity_feature分片多次执行删除。</code></pre><h2 id="2-delete-join-不能添加limit限制"><a href="#2-delete-join-不能添加limit限制" class="headerlink" title="2. delete join 不能添加limit限制"></a>2. delete join 不能添加limit限制</h2><p><strong>问题语句</strong>：</p><figure class="highlight sql" data-lang="sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> a <span class="keyword">from</span> commodity_feature a</span><br><span class="line">  <span class="keyword">left</span> <span class="keyword">join</span> (<span class="keyword">select</span> cid, source<span class="operator">-</span><span class="operator">&gt;&gt;</span>&quot;$.shopId&quot; <span class="keyword">as</span> shopId, <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> num <span class="keyword">from</span> commodity_feature <span class="keyword">group</span> <span class="keyword">by</span> cid, shopId) b</span><br><span class="line">  <span class="keyword">on</span> (a.cid <span class="operator">=</span> b.cid <span class="keyword">and</span> a.source<span class="operator">-</span><span class="operator">&gt;&gt;</span>&quot;$.shopId&quot;<span class="operator">=</span>b.shopId)</span><br><span class="line">  <span class="keyword">where</span> mc<span class="operator">&lt;=</span><span class="number">0</span> <span class="keyword">and</span> createdAt<span class="operator">&lt;</span>&quot;2021-12-06&quot;</span><br><span class="line">  <span class="keyword">and</span> b.num <span class="operator">&gt;</span> <span class="number">500</span></span><br><span class="line">  limit <span class="number">10</span>;</span><br></pre></td></tr></table></figure><p><strong>表现</strong>： 报错</p><blockquote><p>1064 - You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ‘limit 10’ at line 1<br><strong>原因分析</strong>：就是对于多表Join删除时，delete不支持limit语法。<br>For the multiple-table syntax, DELETE deletes from each tbl_name the rows that satisfy the conditions. In this case, ORDER BY and LIMIT cannot be used.<br><strong>解决办法</strong>：<br>    1. 先将待删除ID查出来，然后第二个语句删除。<br>    2. 仔细设计表结构和语句，争取不用limit实现删除目标。</p></blockquote><h2 id="3-delete-where-exists-子查询，等效于delete-join-也不能加limit"><a href="#3-delete-where-exists-子查询，等效于delete-join-也不能加limit" class="headerlink" title="3. delete where exists 子查询，等效于delete join, 也不能加limit"></a>3. delete where exists 子查询，等效于delete join, 也不能加limit</h2><p><strong>问题语句</strong>:</p><figure class="highlight sql" data-lang="sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> a <span class="keyword">from</span> commodity_feature a</span><br><span class="line">  <span class="keyword">where</span> a.createdAt <span class="operator">&lt;</span> &quot;2021-12-06&quot; <span class="keyword">and</span> a.mc<span class="operator">&lt;=</span><span class="number">0</span></span><br><span class="line">  <span class="keyword">and</span> <span class="keyword">exists</span> (</span><br><span class="line">    <span class="keyword">select</span> cid <span class="keyword">from</span> (</span><br><span class="line">      <span class="keyword">select</span> cid, source<span class="operator">-</span><span class="operator">&gt;&gt;</span>&quot;$.shopId&quot; <span class="keyword">as</span> shopId, <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> num <span class="keyword">from</span> commodity_feature <span class="keyword">group</span> <span class="keyword">by</span> cid, shopId</span><br><span class="line">    ) b <span class="keyword">where</span> a.cid<span class="operator">=</span>b.cid <span class="keyword">and</span> a.source<span class="operator">-</span><span class="operator">&gt;&gt;</span>&quot;$.shopId&quot;<span class="operator">=</span>b.shopId <span class="keyword">and</span> b.num <span class="operator">&gt;=</span> <span class="number">500</span></span><br><span class="line">  ) limit <span class="number">10</span>;</span><br></pre></td></tr></table></figure><p>原因和解决办法与delete join 一样。</p><h2 id="4-delete-where-子查询，不能是同一张表，否则报错"><a href="#4-delete-where-子查询，不能是同一张表，否则报错" class="headerlink" title="4. delete where 子查询，不能是同一张表，否则报错"></a>4. delete where 子查询，不能是同一张表，否则报错</h2><p><strong>问题语句</strong>:</p><figure class="highlight sql" data-lang="sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> commodity_feature <span class="keyword">where</span> id <span class="keyword">in</span> (<span class="keyword">select</span> id <span class="keyword">from</span> commodity_feature <span class="keyword">where</span> id <span class="operator">&gt;</span> <span class="number">30</span>);</span><br></pre></td></tr></table></figure><p><strong>表现</strong>：</p><blockquote><p>[Err] 1093 - You can’t specify target table ‘commodity_feature’ for update in FROM clause<br><strong>原因分析</strong>：<br>    1. delete子查询不允许是同一张表<br>        <a href="https://dev.mysql.com/doc/refman/8.0/en/delete.html">MySQL delete 文档</a><br>    2. 之所以不直接用delete where的原因是: 若条件不是主键，在级联删除时mysql会先查找待删除数据缓存起来，这时候若表中存在超大字段，可能会导致数据库内存耗尽宕机。</p></blockquote><p><strong>解决办法</strong>： 子查询再包一层。</p><figure class="highlight sql" data-lang="sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> commodity_feature <span class="keyword">where</span> id <span class="keyword">in</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> id <span class="keyword">from</span> commodity_feature <span class="keyword">where</span> id <span class="operator">&gt;</span> <span class="number">30</span>)b);</span><br></pre></td></tr></table></figure><h2 id="5-delete-where-in-问题"><a href="#5-delete-where-in-问题" class="headerlink" title="5. delete where in 问题"></a>5. delete where in 问题</h2><p><strong>问题语句</strong>:</p><figure class="highlight sql" data-lang="sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> commodity_feature <span class="keyword">where</span> id <span class="keyword">in</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> id <span class="keyword">from</span> commodity_feature <span class="keyword">where</span> source<span class="operator">-</span><span class="operator">&gt;&gt;</span>&quot;$.shopId&quot; <span class="keyword">is</span> <span class="keyword">null</span>)b) limit <span class="number">10</span>;</span><br></pre></td></tr></table></figure><p><strong>表现</strong>： 当子查询结果数量小于limit时，触发全表扫描<br><strong>原因分析</strong>：<br>    1. mysql limit使用不当可能导致全表扫描。当limit数超过实际符合条件的数据量时会触发全表扫描，不仅是delete, selete也会(可能部分版本会这样)。<br>       看这个例子: <a href="http://www.itpub.net/thread-1873582-1-1.html">mysql的limit使用不当导致了全表扫描</a><br><strong>解决办法</strong>：<br>    1. 尽量不用limit, 善用合适的where条件获取或删除数据。<br>    2. 可以先查询出待删除数据的量，再设置合适的limit删除。</p><h2 id="6-mysql5-7中子查询中的order-by失效"><a href="#6-mysql5-7中子查询中的order-by失效" class="headerlink" title="6. mysql5.7中子查询中的order by失效"></a>6. mysql5.7中子查询中的order by失效</h2><p><strong>问题语句</strong>: (该记录没有记录完整，以后补充)</p><p><strong>原因分析</strong>：<br>    A “table” (and subquery in the FROM clause too) is - according to the SQL standard - an unordered set of rows. Rows in a table (or in a subquery in the FROM clause) do not come in any specific order. That’s why the optimizer can ignore the ORDER BY clause that you have specified. In fact, SQL standard does not even allow the ORDER BY clause to appear in this subquery (we allow it, because ORDER BY … LIMIT … changes the result, the set of rows, not only their order). You need to treat the subquery in the FROM clause, as a set of rows in some unspecified and undefined order, and put the ORDER BY on the top-level SELECT。<br><strong>解决办法</strong>：<br>    1. 子查询 order by 添加limit</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-delete-where-is-null-JSON-无索引&quot;&gt;&lt;a href=&quot;#1-delete-where-is-null-JSON-无索引&quot; class=&quot;headerlink&quot; title=&quot;1. delete where is null + JSON</summary>
      
    
    
    
    <category term="编程基础" scheme="https://www.chaoswork.cn/categories/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
    <category term="数据库" scheme="https://www.chaoswork.cn/categories/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="编程基础" scheme="https://www.chaoswork.cn/tags/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
    <category term="数据库" scheme="https://www.chaoswork.cn/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="MYSQL" scheme="https://www.chaoswork.cn/tags/MYSQL/"/>
    
  </entry>
  
  <entry>
    <title>C++开源游戏服务器或脚手架记录</title>
    <link href="https://www.chaoswork.cn/20230508-1.html"/>
    <id>https://www.chaoswork.cn/20230508-1.html</id>
    <published>2023-05-08T02:45:28.000Z</published>
    <updated>2023-05-08T08:12:59.736Z</updated>
    
    <content type="html"><![CDATA[<h2 id="BigWorld"><a href="#BigWorld" class="headerlink" title="BigWorld"></a>BigWorld</h2><p>BigWorld公司网址: <a href="http://www.bigworldtech.com/">http://www.bigworldtech.com/</a><br>github地址: <a href="https://github.com/v2v3v4/BigWorld-Engine-14.4.1.git">https://github.com/v2v3v4/BigWorld-Engine-14.4.1.git</a></p><p>商业引擎，并非完全开源，但是是很多开源服务器框架的鼻祖。<br>该引擎是澳大利亚BigWorldPty.Ltd所开发的，由服务器软件、内容创建工具、3D客户端引擎、服务器端实时管理工具组成，为致力于构建富有创造力的一流的新一代网络游戏的开发商降低了开发周期和成本。</p><p>作为世界上最优异的大型多人在线网络游戏（MMO）解决方案，与其他著名商业游戏引擎有着明显区别的是，BigWorld引擎包含了制作次世代网络游戏的所有复杂技术，是世界范围内在技术架构上唯一完整的网络游戏开发平台。凭借其全球顶尖的动态负载均衡服务器架构及诸多创新技术设计，BigWorld引擎在迅速成为行业标准的同时，确立了在MMORPG商业授权市场的全球领先地位，是诸多世界著名游戏开发商的首选。仅在中国，就已经有十余款基于BigWorld引擎研发的大型多人在线网络游戏完成上线交付。</p><p>BigWorld引擎的代表作：<br>· 中国：《天下贰 》《天下叁》等等数十款，网易对BigWorld的实用化贡献很大。<br>· 国际：《魔兽世界》早期版本，《坦克世界》，《战争雷霆》</p><h2 id="KBengine"><a href="#KBengine" class="headerlink" title="KBengine"></a>KBengine</h2><p>github地址: <a href="https://github.com/kbengine/kbengine.git">https://github.com/kbengine/kbengine.git</a><br>MMORPG游戏服务端框架，作者自称是仿照BigWorld的架构所写。C++编写，python脚本，跨平台，支持热更新。有一些插件可以方便对接Unity,cocos等客户端引擎。</p><h2 id="NoahGameFrame"><a href="#NoahGameFrame" class="headerlink" title="NoahGameFrame"></a>NoahGameFrame</h2><p>github地址: <a href="https://github.com/ketoo/NoahGameFrame.git">https://github.com/ketoo/NoahGameFrame.git</a><br>作者受OGRE和BigWorld启发而开发的MMO服务端框架。C++编写，Lua脚本，跨平台，分布式可扩展插件，高性能actor模型。截止本文最近一次更新: 2022/04/22.<br>差不多的几个项目，这几个项目之间加了互联：</p><ul><li><a href="https://github.com/zsummer/breeze.git">breeze</a>: 一个C++的轻量级的分布式服务器引擎, 截止本文最近一次更新: 2020/07/15.</li><li><a href="https://github.com/sniper00/moon.git">moon</a>: 较新的一个actor模型服务端框架，采用较新的premake5编译管理工具，还在持续迭代中。</li></ul><h2 id="MaNGOS-TrinityCore-AzerothCore"><a href="#MaNGOS-TrinityCore-AzerothCore" class="headerlink" title="MaNGOS/TrinityCore/AzerothCore"></a>MaNGOS/TrinityCore/AzerothCore</h2><p>github地址： <a href="https://github.com/mangos/MaNGOS.git">https://github.com/mangos/MaNGOS.git</a><br>《魔兽世界》私服仿真服务器，支持多个版本魔兽世界客户端。作为一款游戏服务器框架而开源。基于此产生了许多衍生版魔兽世界开源服务器项目，包括：</p><ul><li><a href="https://github.com/TrinityCore/TrinityCore.git">TrinityCore</a>: 支持魔兽世界客户端3.3.5a,号称实现了该版本99%的功能。</li><li><a href="https://github.com/azerothcore/azerothcore-wotlk.git">AzerothCore</a>: 参考TrinityCore的另一个版本。</li></ul><h2 id="rathena"><a href="#rathena" class="headerlink" title="rathena"></a>rathena</h2><p>韩国MMORPG游戏《仙境传说》的私服仿真服务器，社区维护，纯C代码，lua脚本。<br>github地址: <a href="https://github.com/rathena/rathena.git">https://github.com/rathena/rathena.git</a></p><h2 id="OpenTibiaBR-forgottenserver"><a href="#OpenTibiaBR-forgottenserver" class="headerlink" title="OpenTibiaBR/forgottenserver"></a>OpenTibiaBR/forgottenserver</h2><p>github地址： <a href="https://github.com/opentibiabr/canary.git">https://github.com/opentibiabr/canary.git</a><br>《Tibia》是欧洲历史最悠久，最成功的2D MMORPG游戏之一。OpenTibiaBR是复刻该游戏的开源项目，包含服务端和客户端工程。完整度很高，可以直接上手部署。<br>其服务端是C++编写，脚本采用Lua，客户端目前有PC和Android版本。<br>**<a href="https://github.com/otland/forgottenserver.git">forgottenserver</a>**是OpenTibiaBR 服务端的fork版本。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;BigWorld&quot;&gt;&lt;a href=&quot;#BigWorld&quot; class=&quot;headerlink&quot; title=&quot;BigWorld&quot;&gt;&lt;/a&gt;BigWorld&lt;/h2&gt;&lt;p&gt;BigWorld公司网址: &lt;a href=&quot;http://www.bigworldtech</summary>
      
    
    
    
    <category term="游戏开发" scheme="https://www.chaoswork.cn/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    <category term="服务器" scheme="https://www.chaoswork.cn/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
    <category term="游戏开发" scheme="https://www.chaoswork.cn/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    <category term="服务器" scheme="https://www.chaoswork.cn/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    <category term="C++" scheme="https://www.chaoswork.cn/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu scp命令的一个问题</title>
    <link href="https://www.chaoswork.cn/20230302-1.html"/>
    <id>https://www.chaoswork.cn/20230302-1.html</id>
    <published>2023-03-02T08:23:59.000Z</published>
    <updated>2023-03-02T09:27:50.337Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>今天碰到一个小问题，scp从远端复制目录时，与期望结果不符; 恰好在之后一个同事将远端目录误删，导致数据丢失，只得重新生产数据，浪费几个小时。<br>这个scp的问题以前没有留意过，觉得有必要记录下。</p></blockquote><h2 id="问题记录"><a href="#问题记录" class="headerlink" title="问题记录"></a>问题记录</h2><p>有一台远程机器<code>remote_host</code>，其上有一个目录<code>~/testscp</code>, 其目录结构如下:</p><figure class="highlight bash" data-lang="bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">testscp</span><br><span class="line">├── f1</span><br><span class="line">│   └── info.txt</span><br><span class="line">├── f2</span><br><span class="line">│   └── info.txt</span><br><span class="line">├── f3</span><br><span class="line">│   └── info.txt</span><br><span class="line">└── info.txt</span><br></pre></td></tr></table></figure><p>出问题的scp命令是<strong>远端目录带*号</strong>时:</p><figure class="highlight bash" data-lang="bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r remote_host:~/testscp/* testscp</span><br></pre></td></tr></table></figure><p>问题表现：</p><ol><li>若本地testscp目录存在，则scp拷贝一切正常，完整的文件和目录结构会被拷贝到本地</li><li><strong>若本地testscp不存在，则其会创建testscp目录， 但是拷贝结果中只有一个info.txt，多个子目录中的相同的文件被覆盖到一个位置。</strong></li><li>反过来，若将本地目录拷贝到远端: <code>scp -r testscp/* remote_host:~/testscp</code>, 则会明确要求远端目录存在,否则给出错误提示。</li></ol><p>正确的用法：</p><figure class="highlight bash" data-lang="bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> testscp</span><br><span class="line">scp -r remote_host:~/testscp/* testscp</span><br></pre></td></tr></table></figure><h2 id="相关问题"><a href="#相关问题" class="headerlink" title="相关问题"></a>相关问题</h2><p><code>scp -r</code>不带*号时，其表现也值得留意，比如:</p><figure class="highlight bash" data-lang="bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r remote_host:~/testscp testscp</span><br></pre></td></tr></table></figure><p>其表现为：</p><ol><li>若本地testscp目录不存在，则将远端testscp整个拷贝到当前目录中。</li><li>若本地当前目录存在testscp, 则将远端testscp拷贝到本地testscp中，即本地生成testscp/testscp目录。</li></ol><p>作为对比，cp命令的表现就简单多了，其要求目标目录必须存在，所以就不存在以上问题。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;今天碰到一个小问题，scp从远端复制目录时，与期望结果不符; 恰好在之后一个同事将远端目录误删，导致数据丢失，只得重新生产数据，浪费几个小时。&lt;br&gt;这个scp的问题以前没有留意过，觉得有必要记录下。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 i</summary>
      
    
    
    
    <category term="编程基础" scheme="https://www.chaoswork.cn/categories/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
    <category term="linux基础" scheme="https://www.chaoswork.cn/categories/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/linux%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="编程基础" scheme="https://www.chaoswork.cn/tags/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
    <category term="linux基础" scheme="https://www.chaoswork.cn/tags/linux%E5%9F%BA%E7%A1%80/"/>
    
    <category term="scp" scheme="https://www.chaoswork.cn/tags/scp/"/>
    
  </entry>
  
  <entry>
    <title>linux僵尸进程和孤儿进程一点记录</title>
    <link href="https://www.chaoswork.cn/20230227-1.html"/>
    <id>https://www.chaoswork.cn/20230227-1.html</id>
    <published>2023-02-27T10:10:50.000Z</published>
    <updated>2023-02-28T08:19:05.884Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>工作中偶尔会碰到僵尸进程问题，有时候同事也会来问，有时候自己也会遗忘搞不清，有必要记录一下。</p></blockquote><h2 id="进程基础"><a href="#进程基础" class="headerlink" title="进程基础"></a>进程基础</h2><ol><li>Linux进程是一棵树，除了根节点，每一个进程都由其父进程创建出来。根节点为init/systemd进程，进程号一般为1.</li><li>进程是一种系统资源，进程结束后，将由其父进程负责回收其剩余占用的系统资源。</li></ol><h2 id="孤儿进程"><a href="#孤儿进程" class="headerlink" title="孤儿进程"></a>孤儿进程</h2><p>进程退出时，若还有运行中的子进程，这些子进程就被称为孤儿进程。孤儿进程会被init/systemd收养，也就是孤儿进程的父进程会变成init/systemd。<br>PS： ubuntu16.04以上，每个用户拥有一个独立的systemd进程，该用户运行的孤儿进程会被相应的systemd收养，故孤儿进程ID不一定是1.</p><p>孤儿进程本身不是一种问题。比如我们经常用脚本启动一个后台进程，脚本执行完毕退出，这个后台进程就经历了变孤儿然后被收养的流程。<br>孤儿进程在开发中造成困扰通常是想要结束进程时，错误的结束了它的父进程，造成了误解。一个典型的例子就是： 在supervisor中配置了shell脚本作为应用的可执行路径，shell脚本启动真正的应用程序，然后用supervisor stop 停止应用却发觉应用没有正确停止，后台残留一个ppid为1的应用程序。</p><p>孤儿进程可以正常的被kill杀死。</p><h2 id="僵尸进程"><a href="#僵尸进程" class="headerlink" title="僵尸进程"></a>僵尸进程</h2><p>进程退出后，在被父进程回收前的这段时间状态即为僵尸状态，每个进程都会经历这个过程。正常情况下，僵尸状态的进程会很快被父进程回收。<br>但是若父进程太忙，陷入阻塞无法调用wait/waitpid()来清理子进程，那么进程就变成一个可见的僵尸进程存留于系统中。<br>僵尸进程可以通过ps查看，STAT列值是Z/Z+/Zl/Zl+的就是僵尸进程，同时其COMMAND带有<defunct>标志。</p><ol><li>通常情况下，<strong>僵尸进程无法通过kill杀死</strong>，因为kill只是通知进程退出，但是僵尸进程本身是已调用过exit()后死亡等待回收的进程。<br>解决的办法是杀死其父进程，让init/systemd来回收僵尸进程的资源。</li><li><strong>可以被杀死的僵尸进程</strong>：<br>对于多线程的应用，若主线程调用<code>pthread_exit</code>函数退出，其他线程将保持运行，此时进程无法被回收而显示出僵尸进程状态(Zl/Zl+)。<br>这时候若用<code>ps a -eLf</code>查看，可以看到仅有主线程处于僵尸状态。此时可以通过<code>kill &lt;进程ID&gt;</code>杀死整个进程，而导致僵尸进程被回收。</li></ol><h2 id="附：-进程状态码"><a href="#附：-进程状态码" class="headerlink" title="附： 进程状态码"></a>附： 进程状态码</h2><figure class="highlight plaintext" data-lang="plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">PROCESS STATE CODES</span><br><span class="line">       Here are the different values that the s, stat and state output</span><br><span class="line">       specifiers (header &quot;STAT&quot; or &quot;S&quot;) will display to describe the state of</span><br><span class="line">       a process:</span><br><span class="line"></span><br><span class="line">               D    uninterruptible sleep (usually IO)</span><br><span class="line">               I    Idle kernel thread</span><br><span class="line">               R    running or runnable (on run queue)</span><br><span class="line">               S    interruptible sleep (waiting for an event to complete)</span><br><span class="line">               T    stopped by job control signal</span><br><span class="line">               t    stopped by debugger during the tracing</span><br><span class="line">               W    paging (not valid since the 2.6.xx kernel)</span><br><span class="line">               X    dead (should never be seen)</span><br><span class="line">               Z    defunct (&quot;zombie&quot;) process, terminated but not reaped by</span><br><span class="line">                    its parent</span><br><span class="line"></span><br><span class="line">       For BSD formats and when the stat keyword is used, additional</span><br><span class="line">       characters may be displayed:</span><br><span class="line"></span><br><span class="line">               &lt;    high-priority (not nice to other users)</span><br><span class="line">               N    low-priority (nice to other users)</span><br><span class="line">               L    has pages locked into memory (for real-time and custom IO)</span><br><span class="line">               s    is a session leader</span><br><span class="line">               l    is multi-threaded (using CLONE_THREAD, like NPTL pthreads</span><br><span class="line">                    do)</span><br><span class="line">               +    is in the foreground process group</span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><a href="https://www.cnblogs.com/jian-99/p/7739369.html">https://www.cnblogs.com/jian-99/p/7739369.html</a></li><li><a href="https://www.cnblogs.com/Anker/p/3271773.html">https://www.cnblogs.com/Anker/p/3271773.html</a></li><li><a href="https://blog.csdn.net/weixin_42350305/article/details/112072559">https://blog.csdn.net/weixin_42350305/article/details/112072559</a></li><li><a href="https://zhuanlan.zhihu.com/p/341747924">https://zhuanlan.zhihu.com/p/341747924</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;工作中偶尔会碰到僵尸进程问题，有时候同事也会来问，有时候自己也会遗忘搞不清，有必要记录一下。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;进程基础&quot;&gt;&lt;a href=&quot;#进程基础&quot; class=&quot;headerlink&quot; title=&quot;进程基</summary>
      
    
    
    
    <category term="编程基础" scheme="https://www.chaoswork.cn/categories/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
    <category term="linux基础" scheme="https://www.chaoswork.cn/categories/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/linux%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="编程基础" scheme="https://www.chaoswork.cn/tags/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
    <category term="linux基础" scheme="https://www.chaoswork.cn/tags/linux%E5%9F%BA%E7%A1%80/"/>
    
    <category term="僵尸进程" scheme="https://www.chaoswork.cn/tags/%E5%83%B5%E5%B0%B8%E8%BF%9B%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>关于带返回值的函数未返回引起的Undefined Behavior问题</title>
    <link href="https://www.chaoswork.cn/20230224-1.html"/>
    <id>https://www.chaoswork.cn/20230224-1.html</id>
    <published>2023-02-24T07:18:52.000Z</published>
    <updated>2023-03-03T02:34:28.553Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>最近帮一个同事调试代码，遇到一个奇怪的double free崩溃问题，通过gdb定位到问题函数，发现问题出现在一个局部变量的析构函数中，最初没有关注到返回值问题，花了很多时间分析业务代码，结果找不出任何问题; 后来注意到返回值问题，想到gcc没有任何报错（用了-w屏蔽警告）, 而且测试问题函数内业务代码时，有时候也能修复，所以觉得应该与返回值无关，但是顺手修复后，bug就此消失了。后来上网查找了类似原因，原来是编译优化与UB的基础性问题，惭愧。</p></blockquote><p>知乎讨论帖： <a href="https://www.zhihu.com/question/472017255">这个代码int函数无返回值且开-O2，for循环会无限循环，是什么原因？</a></p><p>后经过测试，对于int函数漏返回值：<br>ubuntu 18.04 gcc 7.5.0 -O2      编译器无警告，运行结果正确，没有触发UB行为<br>ubuntu 20.04 gcc 9.4.0 -O2 -O1  编译器输出警告，运行触发UB行为，比如上面提到的double free或者 带条件for无限循环 等问题</p><p>结论： 进行C/C++程序开发时，基础一定要打牢，同时非常有必要关注编译器版本，优化级别以及警告信息，尽量在打开警告(-Wall)时完成编译并认真对待警告。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://en.cppreference.com/w/cpp/language/ub">cppreference UB</a><br><a href="https://www.cnblogs.com/wangzhiyi/p/10964937.html">C++ 未定义行为</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;最近帮一个同事调试代码，遇到一个奇怪的double free崩溃问题，通过gdb定位到问题函数，发现问题出现在一个局部变量的析构函数中，最初没有关注到返回值问题，花了很多时间分析业务代码，结果找不出任何问题; 后来注意到返回值问题，想到gcc没有任</summary>
      
    
    
    
    <category term="编程基础" scheme="https://www.chaoswork.cn/categories/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
    <category term="C++基础" scheme="https://www.chaoswork.cn/categories/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/C-%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="编程基础" scheme="https://www.chaoswork.cn/tags/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
    <category term="C++基础" scheme="https://www.chaoswork.cn/tags/C-%E5%9F%BA%E7%A1%80/"/>
    
    <category term="gcc" scheme="https://www.chaoswork.cn/tags/gcc/"/>
    
  </entry>
  
  <entry>
    <title>前端打包构建工具整理：功能与区别</title>
    <link href="https://www.chaoswork.cn/20210527-1.html"/>
    <id>https://www.chaoswork.cn/20210527-1.html</id>
    <published>2021-05-27T07:20:18.000Z</published>
    <updated>2023-02-24T07:57:05.991Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>据我了解，前端开发构建工具目前有两大类： bundle和no bundle, 其中,<br>bundle类工具主要代表： webpack, parcel， rollup, esbuild.<br>no bundle类主要代表： snowpack, vite.</p><p>在过去的几年，webpack之类的bundle打包工具，成为大多数web应用程序构建的必要步骤。这是因为：</p><ol><li>在HTTP 1.x时代， 浏览器客户端在同一时间，针对同一域名下的请求有一定数量限制。超过限制数目的请求会被阻塞，从而影响性能，因此合并请求非常有必要；</li><li>在以前的浏览器中， nodejs的CommonJS模块和ES模块，普遍都无法直接运行，必须转换处理，这也为bundler的存在提供了合理性。</li><li>bundle处理本身也有很多优点，比如webpack支持很多插件，可以支持各种文件处理以及混淆压缩等。</li></ol><p>但是bundler的存在，却真实的增加了前端应用开发很多的复杂性，也一定程度影响开发效率， 比如bundle体积过大，热更新速度慢等。而且到了2020后的现代，以上的问题基本上都不复存在：</p><ol><li>http2多路复用，允许同时通过单一的http2连接发起多重的请求-响应消息。随着http2的普及，合并请求变得没那么必要。</li><li>浏览器普遍开始支持ESM模块。</li></ol><p>no bundle构建工具普遍的一个特点就是配置相对简单， 启动和热更新快， 开发体验较好， 这样自然而然开始流行起来。比如vue 2.0用webpack， 到vue 3.0就抛弃webpack改用自研的vite工具了。</p><p>当然no bundle也不是真的no bundle， 毕竟bundle还是有很多优势的，在构建发布时也依然用到bundle工具, 如snowpack可以选择bundler如webpack，vite使用了rollup.</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h3 id="webpack"><a href="#webpack" class="headerlink" title="webpack"></a>webpack</h3><p>官方描述： 本质上，webpack 是一个用于现代 JavaScript 应用程序的 静态模块打包工具。当 webpack 处理应用程序时，它会在内部构建一个 依赖图(dependency graph)，此依赖图对应映射到项目所需的每个模块，并生成一个或多个 bundle。</p><h3 id="rollup"><a href="#rollup" class="headerlink" title="rollup"></a>rollup</h3><p>官方描述： Rollup 是一个 JavaScript 模块打包器，可以将小块代码编译成大块复杂的代码，例如 library 或应用程序。<br>Rollup 对代码模块使用新的标准化格式，这些标准都包含在 JavaScript 的 ES6 版本中，而不是以前的特殊解决方案，如 CommonJS 和 AMD。ES6 模块可以使你自由、无缝地使用你最喜爱的 library 中那些最有用独立函数，而你的项目不必携带其他未使用的代码。ES6 模块最终还是要由浏览器原生实现，但当前 Rollup 可以使你提前体验。</p><h3 id="esbuild"><a href="#esbuild" class="headerlink" title="esbuild"></a>esbuild</h3><p>官方描述： An extremely fast JavaScript bundler.</p><h3 id="snowpack"><a href="#snowpack" class="headerlink" title="snowpack"></a>snowpack</h3><p>官方描述： Snowpack 是为现代浏览器设计的一个超级快的前端构建工具, 它是你在开发工作流程中使用更笨重更复杂的bundle打包工具如webpack, parcel的另一个可选方案。Snowpack利用JavaScript的本地模块系统(即ESM)来避免不必要的（转换）工作, 并在你无论你工程增长多大时保持运行快速。</p><h3 id="vite"><a href="#vite" class="headerlink" title="vite"></a>vite</h3><p>官方描述： Vite 是一种新型前端构建工具，能够显著提升前端开发体验。<br>(vite vue 3.0引入， 使用了esbuild + rollup, 集合两家之长)</p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>webpack升级到5.x,依然是强大的主流选择，但是不再是一统天下了。<br>esbuild 和 rollup 都是小巧玲珑，主打先进和快，仅用于javascript。<br>vite 未来主要依然是用于vue 3.0的生态中。<br>snowpack 朝大而全发展，支持react, vue, svelte等。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;据我了解，前端开发构建工具目前有两大类： bundle和no bundle, 其中,&lt;br&gt;bundle类工具主要代表： webpack, </summary>
      
    
    
    
    <category term="前端开发" scheme="https://www.chaoswork.cn/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="webpack" scheme="https://www.chaoswork.cn/tags/webpack/"/>
    
    <category term="rollup" scheme="https://www.chaoswork.cn/tags/rollup/"/>
    
    <category term="snowpack" scheme="https://www.chaoswork.cn/tags/snowpack/"/>
    
    <category term="vite" scheme="https://www.chaoswork.cn/tags/vite/"/>
    
  </entry>
  
  <entry>
    <title>Linux环境下C/C++开发和可执行程序运行路径</title>
    <link href="https://www.chaoswork.cn/20210315-1.html"/>
    <id>https://www.chaoswork.cn/20210315-1.html</id>
    <published>2021-03-15T06:20:21.000Z</published>
    <updated>2023-08-11T08:13:08.053Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>开发C++程序, 路径设置一直是一个容易出错的关键点。很多人入门C++很久，对于程序开发和运行相关路径还是云里雾里。这里做一个简单的梳理。<br>因为现在C++开发一般都是CMake了，所以本文都以CMake举例。</p></blockquote><h3 id="C-开发中需要关注的路径"><a href="#C-开发中需要关注的路径" class="headerlink" title="C++开发中需要关注的路径"></a>C++开发中需要关注的路径</h3><ol><li><strong>头文件路径</strong>： 头文件路径是编译器(如: cc, cc1)需要使用的路径。</li><li><strong>依赖库文件路径</strong>：  依赖库文件路径是链接器(如: ld)需要使用的路径。</li><li><strong>运行时路径</strong>： 程序运行时通常需要加载一些动态库，仅依赖当前系统环境，与开发设置无关，所以需要在系统环境中设置运行时路径。</li></ol><h3 id="GCC链接选项-L，-rpath-link，-rpath"><a href="#GCC链接选项-L，-rpath-link，-rpath" class="headerlink" title="GCC链接选项-L，-rpath-link，-rpath"></a>GCC链接选项-L，-rpath-link，-rpath</h3><ul><li><code>-L</code>: 指定通过<code>-l</code>连接的动态库的搜索目录，所有的<code>-L</code>对所有的<code>-l</code>有效。</li><li><code>-rpath</code>: 设置运行时库搜索路径，会写入ELF可执行文件中。</li><li><code>-rpath-link</code>: 指定<strong>链接时</strong>间接依赖库搜索路径, 运行时无效。</li></ul><h3 id="LD-LIBRARY-PATH"><a href="#LD-LIBRARY-PATH" class="headerlink" title="LD_LIBRARY_PATH"></a>LD_LIBRARY_PATH</h3><p>在程序链接或运行期间，如果设置了LD_LIBRARY_PATH， 链接器/运行时链接器都会搜索该路径查找动态库。<br>有趣的两点:</p><blockquote><ol><li>LD_LIBRARY_PATH 中可以配置相对路径，比如.和..</li><li>LD_LIBRARY_PATH 中若存在空路径，则相当于包含当前工作路径 (所以LD_LIBRARY_PATH中存在一个多余的冒号与否，有较大区别)</li></ol></blockquote><h3 id="可执行程序运行时搜索库路径的几个点："><a href="#可执行程序运行时搜索库路径的几个点：" class="headerlink" title="可执行程序运行时搜索库路径的几个点："></a>可执行程序运行时搜索库路径的几个点：</h3><ul><li>默认路径： /lib， /usr/lib</li><li>环境变量： <strong>LD_LIBRARY_PATH</strong></li><li>ELF中的<strong>RPATH</strong></li><li>ELF中的<strong>RUNPATH</strong></li></ul><p>其优先级关系如下：</p><p>|ELF中的RPATH|ELF中的RUNPATH|LD_LIBRARY_PATH环境变量|尝试加载目录的数序|<br>|:=:|:=:|:=:|:=:|<br>|未设置|未设置|未设置|/lib==&gt;/usr/lib|<br>|未设置|未设置|设置|${LD_LIBRARY_PATH}==&gt;/lib==&gt;/usr/lib|<br>|设置|未设置|未设置|${RPATH}==&gt;/lib==&gt;/usr/lib|<br>|设置|未设置|设置|${RPATH}==&gt;${LD_LIBRARY_PATH}==&gt;/lib==&gt;/usr/lib|<br>|设置或未设置|设置|设置|${LD_LIBRARY_PATH}==&gt;${RUN_PATH}==&gt;/lib==&gt;/usr/lib|<br>|设置或未设置|设置|未设置|${RUN_PATH}==&gt;/lib==&gt;/usr/lib|</p><h3 id="pkg-config和PKG-CONFIG-PATH"><a href="#pkg-config和PKG-CONFIG-PATH" class="headerlink" title="pkg-config和PKG_CONFIG_PATH"></a>pkg-config和PKG_CONFIG_PATH</h3><p>许多程序和第三方库发布包提供一个*.pc的配置文件，里面也包含了头文件和依赖库等信息，用户通过设置PKG_CONFIG_PATH，就可以利用pkg-config工具解析并输出编译选项，将其用于gcc等编译器的编译链接过程中。如：<br>$gcc main.c <code>pkg-config --cflags --libs opencv</code> -o main</p><blockquote><p>参考： <a href="https://www.cnblogs.com/sddai/p/10266624.html">https://www.cnblogs.com/sddai/p/10266624.html</a></p></blockquote><h3 id="CMake中设置头文件，依赖库路径和运行时路径"><a href="#CMake中设置头文件，依赖库路径和运行时路径" class="headerlink" title="CMake中设置头文件，依赖库路径和运行时路径"></a>CMake中设置头文件，依赖库路径和运行时路径</h3><figure class="highlight plaintext" data-lang="plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">include_directories: 设置当前Project全局头文件路径</span><br><span class="line">target_include_directories： 设置单个target头文件路径</span><br><span class="line"></span><br><span class="line">link_directories: 设置当前Project全局库文件路径</span><br><span class="line">target_link_directories： 设置单个target库文件路径</span><br><span class="line"></span><br><span class="line">link_libraries： 设置当前Project全局依赖的库文件</span><br><span class="line">target_link_libraries： 设置单个target依赖的库文件</span><br><span class="line"></span><br><span class="line">// 设置运行时库路径RPATH</span><br><span class="line">set_target_properties($&#123;APP_NAME&#125; PROPERTIES INSTALL_RPATH &quot;$ORIGIN/lib:/usr/local/lib&quot;)</span><br></pre></td></tr></table></figure><h3 id="可能遇到的问题"><a href="#可能遇到的问题" class="headerlink" title="可能遇到的问题"></a>可能遇到的问题</h3><ol><li>设置了rpath, 但是运行时找不到so.<figure class="highlight bash" data-lang="bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查elf FLAGS:</span></span><br><span class="line"><span class="variable">$readelf</span> -d myelf | grep FLAGS</span><br><span class="line">0x000000000000001e (FLAGS)              ORIGIN</span><br><span class="line">0x000000006ffffffb (FLAGS_1)            Flags: ORIGIN</span><br><span class="line"><span class="comment">#如果看到FLAGS不是上面的ORIGIN，可能需要通过`-z origin`链接选项开启。</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;开发C++程序, 路径设置一直是一个容易出错的关键点。很多人入门C++很久，对于程序开发和运行相关路径还是云里雾里。这里做一个简单的梳理。&lt;br&gt;因为现在C++开发一般都是CMake了，所以本文都以CMake举例。&lt;/p&gt;
&lt;/blockquote</summary>
      
    
    
    
    <category term="编程基础" scheme="https://www.chaoswork.cn/categories/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
    <category term="linux基础" scheme="https://www.chaoswork.cn/categories/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/linux%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="编程基础" scheme="https://www.chaoswork.cn/tags/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
    <category term="linux基础" scheme="https://www.chaoswork.cn/tags/linux%E5%9F%BA%E7%A1%80/"/>
    
    <category term="C++基础" scheme="https://www.chaoswork.cn/tags/C-%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>【转】【分享】80个网站源码</title>
    <link href="https://www.chaoswork.cn/20210201-1.html"/>
    <id>https://www.chaoswork.cn/20210201-1.html</id>
    <published>2021-02-01T15:18:00.000Z</published>
    <updated>2021-03-11T10:04:17.391Z</updated>
    
    <content type="html"><![CDATA[<p>2019帝国CMS7.5仿《ITBear科技资讯》源码<br><code>链接: https://pan.baidu.com/s/1dIOJ16pu4eRiPh7feAPQ0A 提取码: svr9</code></p><p>YMYS009强大专业的x站<br><code>链接: https://pan.baidu.com/s/1FHWIq6VLgndBiyCXwrkHUA 提取码: gvuw</code></p><p>粉色小说网站<br><code>链接: https://pan.baidu.com/s/1smbS_EiEOwpjhoZ0cT9hPQ 提取码: kxai</code></p><p>酷黑音乐网<br><code>链接: https://pan.baidu.com/s/1pcreZ_zrMT15ll0d4x5a4Q 提取码: te7e</code></p><p>MKCMS米酷源码6.2<br><code>链接: https://pan.baidu.com/s/1v2N32cm3SCtUaLTbm_E26w 提取码: vqex</code></p><p>2019最新笔趣阁全套<br><code>链接: https://pan.baidu.com/s/1-k6LWN_JtE_YzNFMequ6Nw 提取码: c9kf</code></p><p>仿蜻蜓听书网<br><code>链接: https://pan.baidu.com/s/1xkCo6D69v9GlWYXhrOOMnw 提取码: 87g5</code></p><p>Xyplayer X3.91正式版<br><code>链接: https://pan.baidu.com/s/1lR6LwoHNBEjZDdZsjtHSfg 提取码: at42</code></p><p>默笙工具箱V2.0 带后台<br><code>链接: https://pan.baidu.com/s/1_lTVbbJkmUIiN7Cv4zz9Zw 提取码: 88pi</code></p><p>优客365导航<br><code>链接: https://pan.baidu.com/s/1UCnJYfVAu0AOtCyu-dBlYQ 提取码: idcf</code></p><p>蚂蚁魔盒源码<br><code>链接: https://pan.baidu.com/s/1jEh_0ambJno7QigVwyfcIg 提取码: f12x</code></p><p>骑士人才招聘系统5.2.6版<br><code>链接: https://pan.baidu.com/s/1AjDXlTfeY5p8bvMcZinexg 提取码: rg4e</code></p><p>龙武<br><code>链接: https://pan.baidu.com/s/1668S3dcv93cMOIUklfCMcQ 提取码: 3ft8</code></p><p>php云人才网系统4.6.1源码<br><code>链接: https://pan.baidu.com/s/1wqOyh0l4bErp02GN2jpO6w 提取码: ttrj</code></p><p>PTCMS完整版V4.2.8<br><code>链接: https://pan.baidu.com/s/10d85TNiOWz9beKbLQaUSrA 提取码: 6dwj</code></p><p>2019最新盒子<br><code>链接: https://pan.baidu.com/s/1GLuhavCLoxcaQSSOP8oXCA 提取码: 4d49</code></p><p>趣头条新闻闻阅读源码<br><code>链接: https://pan.baidu.com/s/1AgeLbX1qbsa53ecmllm7pw 提取码: jfnt</code></p><p>蜘蛛池站群源码<br><code>链接: https://pan.baidu.com/s/1ythqsSG8raAPnZtdAnia8g 提取码: 2ump</code></p><p>友价虚拟物品商城20191023版<br><code>链接: https://pan.baidu.com/s/1Pnl7CFHfKoIubTTPj495gA 提取码: vkky</code></p><p>最新聚合支付系统源码<br><code>链接: https://pan.baidu.com/s/1CFlrEFyuvJ0OAbIoNeL-9w 提取码: k4re</code></p><p>全新任务悬赏平台<br><code>链接: https://pan.baidu.com/s/12C15Mf1EKEwgB6Yrk-OIog 提取码: d3vn</code></p><p>苹果cmsV10秘趣响应式<br><code>链接: https://pan.baidu.com/s/1jctInmwejwN5lcNYFdQCtQ 提取码: w1b8</code></p><p>WordPress主题 LightSNS_1.5.204.1<br><code>链接: https://pan.baidu.com/s/1nU1zups5LEzEbuH07Ajzcg 提取码: n38k</code></p><p>鹅之家机器人源码<br><code>链接: https://pan.baidu.com/s/1wh0teLMGxbR7AoUS3NNZTw 提取码: f546</code></p><p>米酷2019最新版 自动采集 安装教程<br><code>链接: https://pan.baidu.com/s/1Aa7dbwhRriIVeeVW7IZGgg 提取码: w1e4</code></p><p>Discuz强制伪静态地址seoV5.3插件<br><code>链接: https://pan.baidu.com/s/1opyq20vB4-SwRyRA7XstiA 提取码: f3ef</code></p><p>优客365网址导航精华版1.1.6网站<br><code>链接: https://pan.baidu.com/s/1ZTR8u5P6k_jSqBxEh2BWiA 提取码: fstj</code></p><p>织梦dedecms电商信息新闻资讯模板<br><code>链接: https://pan.baidu.com/s/1GeV7521fWcxKWJrP8_4nBg 提取码: nse1</code></p><p>抖音时钟html<br><code>链接: https://pan.baidu.com/s/1bWrZPntGmJXhh0Zh66kWYg 提取码: 8x6c</code></p><p>帝国cms 7.5大气高科技感网站模板<br><code>链接: https://pan.baidu.com/s/1RarToW2ps6KWOSmdgLpazQ 提取码: baz8</code></p><p>柒上网络漫画系统3.0<br><code>链接: https://pan.baidu.com/s/1fY_3eBrOnNz3T-gkwLaI8g 提取码: i748</code></p><p>江冉企业级APP分发<br><code>链接: https://pan.baidu.com/s/1qvCFseH9Ys7weD1uKpxiIA 提取码: rfwi</code></p><p>MKCMS6.2.4新用户完整版<br><code>链接: https://pan.baidu.com/s/1yvhaooDUQ2Zm4dQKAsWEtQ 提取码: s9hh</code></p><p>球球大作战源码<br><code>链接: https://pan.baidu.com/s/1nuigKoFkzLLUqjjhOzm0tA 提取码: j8vi</code></p><p>riproV4.3PJ版<br><code>链接: https://pan.baidu.com/s/1TQmin9CrZ4HlzTfPY6W1jA 提取码: fx99</code></p><p>Thinkphp内核仿拼多多源码<br><code>链接: https://pan.baidu.com/s/1rNIGiDxzYCJYgk_AC5iazg 提取码: 49na</code></p><p>Thinkphp金多多广告机系统源码<br><code>链接: https://pan.baidu.com/s/1wlbd9J77Kvp__v0B_JmoGw 提取码: be2f</code></p><p>PHPYUNV4.6.1人才招聘系统<br><code>链接: https://pan.baidu.com/s/1R8NJWPZYEHuURtQ7tVgZBg 提取码: ekqz</code></p><p>最新仿知乎问答社区响应式源码带打赏功能<br><code>链接: https://pan.baidu.com/s/1nJWz3yGsk8zBwSAUI7_x9g 提取码: hc5c</code></p><p>ThinkPHP框架仿糗事百科笑话系统源码<br><code>链接: https://pan.baidu.com/s/144LDoHG8LufRNAyDl0H7-w 提取码: d2u4</code></p><p>PTCMS仿蜻蜓听书网带装图文教程版<br><code>链接: https://pan.baidu.com/s/1o729OBdDJI_IBwxoMx0PBA 提取码: 45vt</code></p><p>百度网盘群组分享平台源码<br><code>链接: https://pan.baidu.com/s/1jyoznrYnGWofyQ4P5OK19A 提取码: bfhp</code></p><p>Timely 基于TP5.1开源客服系统<br><code>链接: https://pan.baidu.com/s/1Sa7YcCefyW9DIBJ8aRaRIw 提取码: 6ma9</code></p><p>系统之家下载站源码 thinkPHP框架<br><code>链接: https://pan.baidu.com/s/1cHvoJDvD8ZkurWg9dl8tjg 提取码: 9vef</code></p><p>四合一中英文企业网站模板php源码<br><code>链接: https://pan.baidu.com/s/1OaM8_y31zNUPhgGUSGBdHg 提取码: 7u5k</code></p><p>仿《新趣头条》源码 娱乐游戏资讯网站模板<br><code>链接: https://pan.baidu.com/s/1gmEoTCVRJ5xnkZteAOsEKg 提取码: ejai</code></p><p>XyplayerX3.93 解析源码<br><code>链接: https://pan.baidu.com/s/1JUa3jb4oSzgW5OKnqpStPg 提取码: vyb3</code></p><p>WP主题 savoy 2.3.3<br><code>链接: https://pan.baidu.com/s/1gWwPWU0V06Pvs-C05m3zCg 提取码: eka2</code></p><p>苹果cmsV10含羞草网站源码<br><code>链接: https://pan.baidu.com/s/1dAt7XQ_tRHi7Z3E9RBcUBg 提取码: s5s8</code></p><p>WEB机器人+酷Q开发的demo机器人<br><code>链接: https://pan.baidu.com/s/1dqWSTD2x54dUAwKV86e-kw 提取码: 677p</code></p><p>随机小姐姐源码<br><code>链接: https://pan.baidu.com/s/1tDvAl_EAhsMjNWkrLGwwDg 提取码: x47a</code></p><p>微信域名防封三合一<br><code>链接: https://pan.baidu.com/s/12GurwfdAaoHGD4gvq1w4kw 提取码: 8rai</code></p><p>羊毛自动采集<br><code>链接: https://pan.baidu.com/s/126xArmXh-kVFSX5SJdm2Lw 提取码: n3py</code></p><p>独立后台塔罗牌占卜爱情塔罗牌源码<br><code>链接: https://pan.baidu.com/s/1d1eIRYGLAJ3wHE6djzsMog 提取码: 323n</code></p><p>ThinkPHP框架 非常漂亮UI红色网贷借款源码<br><code>链接: https://pan.baidu.com/s/1LP3Ios2lgOILTZk-Ls643w 提取码: 3pyu</code></p><p>仿火币区块链交易所源码<br><code>链接: https://pan.baidu.com/s/15iN2yTA8nqA5sWKMrAfGwg 提取码: efgm</code></p><p>E4A熊猫E4A源码<br><code>链接: https://pan.baidu.com/s/1lvwZ1S5WkD06-BUsChBMDQ 提取码: q3hp</code></p><p>海洋CMS仿挖片网<br><code>链接: https://pan.baidu.com/s/1A7aMmPtLxicEP58DT5rSSw 提取码: gcur</code></p><p>WordPress简约响应式导航主题VIK<br><code>链接: https://pan.baidu.com/s/1T1rIwICD0pgVnT7DYknJ5Q 提取码: scws</code></p><p>阿狸子订单系统豪华版<br><code>链接: https://pan.baidu.com/s/1tHF6_FY8dOTA_rAX2W-vEg 提取码: nzxp</code></p><p>新版阿里能量树源码<br><code>链接: https://pan.baidu.com/s/1tf35K2hUwA-33CdRTguZ1A 提取码: 88jt</code></p><p>全新188建站<br><code>链接: https://pan.baidu.com/s/1jxLFrzWeaWMaw8np7-_tAQ 提取码: ixxf</code></p><p>小旋风蜘蛛池x4PJ版下载<br><code>链接: https://pan.baidu.com/s/19UNav1_G1Y-KREPC72_IVQ 提取码: 34tm</code></p><p>阿里百秀XIU_v7.1后台解密无限制版<br><code>链接: https://pan.baidu.com/s/1GI0EeUSnNnSKnVDdkxgX2Q 提取码: 7euj</code></p><p>WordPress主题 Inpandora主题模板<br><code>链接: https://pan.baidu.com/s/1Vqtz3FrmrrW31kkPdcKHyA 提取码: tw81</code></p><p>彩虹5.8PJ版<br><code>链接: https://pan.baidu.com/s/1TYvNCVFbHi2YXqqZ5Iv0hg 提取码: rxvg</code></p><p>RiproV4.9.0商业版<br><code>链接: https://pan.baidu.com/s/1rFhXeQQqfF11ycLdvNGlfA 提取码: swjs</code></p><p>抖音去水印源码小程序独立版<br><code>链接: https://pan.baidu.com/s/1ag9X3-uZgvy7hih01HVdng 提取码: qdq6</code></p><p>YYCMS全自动CJ网站源码<br><code>链接: https://pan.baidu.com/s/1zE8wsLtIQ1taMU__sH3wYQ 提取码: rpc8</code></p><p>素材解析8.0<br><code>链接: https://pan.baidu.com/s/1jkWX35KjLa2fmOOAgBZQrg 提取码: vnpt</code></p><p>微信分享邀请引流html页面源码<br><code>链接: https://pan.baidu.com/s/1VdqYAj0JFB-yHVX915YhnA 提取码: 82ia</code></p><p>PHP全自动采集在线高清壁纸网站源码<br><code>链接: https://pan.baidu.com/s/1nAzQ0xqb0-3c_Fo-Vmlupw 提取码: c259</code></p><p>dux 6.1版<br><code>链接: https://pan.baidu.com/s/156xtCqR55171pihKA1dcKg 提取码: hys6</code></p><p>扫地雷源码-独家修复+数据库+教程<br><code>链接: https://pan.baidu.com/s/1emjsERP0rCTpwUx6ANZ8Sg 提取码: 54ic</code></p><p>微博红包<br><code>链接: https://pan.baidu.com/s/13nv_MNQwF7vgf4KPgCLFfw 提取码: 1raq</code></p><p>小涴熊漫画CMS<br><code>链接: https://pan.baidu.com/s/1FgJC_zJhoyi5ylu4pzXlHQ 提取码: zs9j</code></p><p>资源分享网整站<br><code>链接: https://pan.baidu.com/s/1vX19R9FkO46DRt4EhQgX1A 提取码: fueu</code></p><p>2020点1头条<br><code>链接: https://pan.baidu.com/s/1IIuDEbcQkRq2vCiqj8wtew 提取码: nur2</code></p><p>NZ源码交易平台虚拟交易系统(商家版)<br><code>链接: https://pan.baidu.com/s/1iFdDptQl0IIMH-tF2SbTmQ 提取码: dtus</code></p><p>PHP短链接短网址生成源码V3.0<br><code>链接: https://pan.baidu.com/s/1Cnn9l88-akVSLFgA0XMuQg 提取码: q6iu</code></p><p>PHP游戏陪玩平台源码<br><code> 链接: https://pan.baidu.com/s/1RMHAtVHj1ejM0b2YD3NXqQ 提取码: uwqr</code></p><p>92game精仿海盗湾站<br><code>链接: https://pan.baidu.com/s/1SWX_mKl6nzy2Pa9kf7LjRQ 提取码: ehrm</code></p><p>Vieu4.主题PJ版无授权<br><code>链接: https://pan.baidu.com/s/19M8ppZHlCfg4fInIMM6Qww 提取码: 2p3b</code></p><p>小旋风万能蜘蛛池x5.1_PJ不限授权<br><code>链接: https://pan.baidu.com/s/1O5h42tbQO-44QI5Pu_EJ2A 提取码: c8sn</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;2019帝国CMS7.5仿《ITBear科技资讯》源码&lt;br&gt;&lt;code&gt;链接: https://pan.baidu.com/s/1dIOJ16pu4eRiPh7feAPQ0A 提取码: svr9&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;YMYS009强大专业的x站&lt;br&gt;&lt;code&gt;</summary>
      
    
    
    
    <category term="资源分享" scheme="https://www.chaoswork.cn/categories/%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB/"/>
    
    <category term="源码" scheme="https://www.chaoswork.cn/categories/%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB/%E6%BA%90%E7%A0%81/"/>
    
    
    <category term="资源分享" scheme="https://www.chaoswork.cn/tags/%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB/"/>
    
    <category term="源码" scheme="https://www.chaoswork.cn/tags/%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Linux adb devices 显示no permissions问题解决</title>
    <link href="https://www.chaoswork.cn/20200611-1.html"/>
    <id>https://www.chaoswork.cn/20200611-1.html</id>
    <published>2020-06-11T09:51:24.000Z</published>
    <updated>2021-03-11T10:04:17.391Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>source: <a href="https://blog.csdn.net/binglumeng/article/details/69525361">https://blog.csdn.net/binglumeng/article/details/69525361</a></p></blockquote><h2 id="1-adb的安装"><a href="#1-adb的安装" class="headerlink" title="1. adb的安装"></a>1. adb的安装</h2><p>本人的Linux开发环境为Ubuntu Server 16.04，有使用其他平台，如CentOS等，可灵活变通。</p><figure class="highlight shell" data-lang="shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install adb</span><br><span class="line">sudo apt install android-tools-adb</span><br></pre></td></tr></table></figure><h2 id="2-no-permissions"><a href="#2-no-permissions" class="headerlink" title="2. no permissions"></a>2. no permissions</h2><p>安装好adb工具之后，连接安卓设备，并开启usb调试，使用adb devices发现显示出来的竟然是<br><code>xxxxxxx no permissions</code> 在网上查看到有相关解决方案:</p><ul><li><p>首先，在未连接Android设备的情况下，用<code>lsusb</code>查看一下usb设备:</p><figure class="highlight shell" data-lang="shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">lsusb</span></span><br><span class="line">Bus 002 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub</span><br><span class="line">Bus 001 Device 003: ID 0bda:0129 Realtek Semiconductor Corp. RTS5129 Card Reader Controller</span><br><span class="line">Bus 001 Device 005: ID 0cf3:e005 Atheros Communications, Inc.</span><br><span class="line">Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub</span><br></pre></td></tr></table></figure></li><li><p>然后，打开android设备的usb调试模式，连接到Linux电脑上，再用<code>lsusb</code>查看一下usb设备:</p><figure class="highlight shell" data-lang="shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">lsusb</span></span><br><span class="line">Bus 002 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub</span><br><span class="line">Bus 001 Device 003: ID 0bda:0129 Realtek Semiconductor Corp. RTS5129 Card Reader Controller</span><br><span class="line">Bus 001 Device 005: ID 0cf3:e005 Atheros Communications, Inc.</span><br><span class="line">Bus 001 Device 019: ID 2207:0010   # 此条新增的条目，则是新连接的android设备</span><br><span class="line">Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub</span><br></pre></td></tr></table></figure><p>如上则可以查看到新连接的Android设备信息，注意其ID号，这里是<code>2207</code>和<code>0010</code>，分别表示vendorID和productID。</p></li><li><p>然后cd /etc/udev/rules.d/目录下，在.rules文件(比如：custom-usb.rules)新增以下配置：</p><figure class="highlight plaintext" data-lang="plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SUBSYSTEM==&quot;usb&quot;,ATTRS&#123;idVendor&#125;==&quot;2207&quot;,ATTRS&#123;idProduct&#125;==&quot;0010&quot;,MODE=&quot;0666&quot;</span><br></pre></td></tr></table></figure><p>这里MODE表示权限。</p></li><li><p>给新增配置增加执行权限，并重启udev服务：</p><figure class="highlight shell" data-lang="shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod a+rx /etc/udev/rules.d/custom-usb.rules</span><br><span class="line">sudo service udev restart</span><br></pre></td></tr></table></figure></li><li><p>至此，拔掉usb重新连接，然后在运行如下命令，便可进行adb操作</p><figure class="highlight shell" data-lang="shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo adb kill-server</span><br><span class="line">sudo adb start-server</span><br><span class="line">sudo devices</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">若要需要root权限进入Android设备的shell，可以运行</span></span><br><span class="line">adb root</span><br><span class="line">adb remount</span><br><span class="line">adb shell</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-adb-devices为空"><a href="#3-adb-devices为空" class="headerlink" title="3. adb devices为空"></a>3. adb devices为空</h2><p>若是运行<code>adb devices</code>列表为空，而lsusb却能看到已经连接的Android设备，此时可以</p><figure class="highlight shell" data-lang="shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编辑adb_usb.ini文件</span></span><br><span class="line">sudo vim ~/.android/adb_usb.ini</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加入 0x0bb4 然后执行</span></span><br><span class="line">sudo service udev restart</span><br><span class="line">android update adb</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;source: &lt;a href=&quot;https://blog.csdn.net/binglumeng/article/details/69525361&quot;&gt;https://blog.csdn.net/binglumeng/article/details</summary>
      
    
    
    
    <category term="经验教程" scheme="https://www.chaoswork.cn/categories/%E7%BB%8F%E9%AA%8C%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="linux" scheme="https://www.chaoswork.cn/tags/linux/"/>
    
    <category term="adb" scheme="https://www.chaoswork.cn/tags/adb/"/>
    
    <category term="lsusb" scheme="https://www.chaoswork.cn/tags/lsusb/"/>
    
  </entry>
  
  <entry>
    <title>各类MQTT代理服务器特性对比</title>
    <link href="https://www.chaoswork.cn/20200604-1.html"/>
    <id>https://www.chaoswork.cn/20200604-1.html</id>
    <published>2020-06-04T09:51:24.000Z</published>
    <updated>2021-03-11T10:04:17.391Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>From: <a href="https://github.com/mqtt/mqtt.github.io/wiki/server-support">https://github.com/mqtt/mqtt.github.io/wiki/server-support</a></p></blockquote><p>翻译如下：</p><p>本页试图记录各种MQTT服务器（代理）支持的特性。这是针对它们对MQTT的支持；其中很多服务器具有比MQTT更广泛的功能。</p><h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><blockquote><p>备注<br>QoS 0：服务质量 0，最多传输一次。<br>QoS 1：服务质量1，至少传输一次。<br>QoS 2：服务质量2，仅仅传输一次。<br>auth：验证，身份验证授权。<br>bridge：桥接，服务器代理之间连接<br>$SYS：主题过滤器通配符，订阅后能够接收到所有以此通配符开头的主题的消息。<br>dynamic topics：动态主题<br>cluster：集群</p></blockquote><table><thead><tr><th>Server</th><th>QoS 0</th><th>QoS 1</th><th>QoS 2</th><th>auth</th><th><a href="bridge_protocol">Bridge</a></th><th><a href="conventions#$sys">$SYS</a></th><th>SSL</th><th><a href="are_topics_dynamic">Dynamic topics</a></th><th>cluster</th><th>websockets</th><th>plugin system</th><th>Mqtt 5 support</th><th>Active development</th></tr></thead><tbody><tr><td><a href="https://github.com/moscajs/aedes">Aedes</a></td><td>✔</td><td>✔</td><td>✔</td><td>Username/Password</td><td><strong>rm</strong></td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✘</td><td>✔</td></tr><tr><td><a href="https://aws.amazon.com/en/iot/">AWS IoT Services</a></td><td>✔</td><td>✔</td><td>✔</td><td>Client certificates</td><td>?</td><td>✘</td><td>✔</td><td>§</td><td>✔</td><td>✔</td><td>✘</td><td>✘</td><td>✔</td></tr><tr><td><a href="http://activemq.apache.org/">Apache ActiveMQ Artemis</a></td><td>✔</td><td>✔</td><td>✔</td><td>JAAS</td><td>✘</td><td>✘</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✘</td><td>✔</td></tr><tr><td><a href="https://www.bevywise.com/iot-platform/">BevywiseIoTPlatform</a></td><td>✔</td><td>✔</td><td>✔</td><td>Key based</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td><strong>rm</strong></td><td>✘</td><td>✔</td></tr><tr><td><a href="https://clearblade.com/">ClearBlade</a></td><td>✔</td><td>✔</td><td>✔</td><td>OAuth based User/Pass &amp; Per-channel authorization</td><td>?</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>?</td><td>✘</td><td>✔</td></tr><tr><td><a href="https://www.process-one.net/en/ejabberd">ejabberd</a></td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td></tr><tr><td><a href="https://github.com/emitter-io/emitter">emitter</a></td><td>✔</td><td>✘</td><td>✘</td><td>Per-channel authorization</td><td>✘</td><td>✘</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✘</td><td>✘</td><td>✔</td></tr><tr><td><a href="http://emqtt.io/">emqttd / EMQ</a></td><td>✔</td><td>✔</td><td>✔</td><td>Username/Password, JWT, LDAP, ClientID, …</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✘</td><td>✔</td></tr><tr><td><a href="https://flespi.com/mqtt-broker">flespi</a></td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✘</td><td>✘</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✘</td><td>✘</td><td>✔</td></tr><tr><td><a href="https://github.com/ppatierno/gnatmq">GnatMQ / M2MQTT</a></td><td>✔</td><td>✔</td><td>✔</td><td>Username/Password</td><td>✘</td><td>✘</td><td>✔</td><td>✔</td><td>✘</td><td>✘</td><td>✘</td><td>✘</td><td>✔</td></tr><tr><td><a href="https://github.com/beerfactory/hbmqtt">HBMQTT</a></td><td>✔</td><td>✔</td><td>✔</td><td>Username/Password, Client certificates</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✘</td><td>✔</td><td>✔</td><td>✘</td><td>✔</td></tr><tr><td><a href="http://www.hivemq.com/">HiveMQ</a></td><td>✔</td><td>✔</td><td>✔</td><td>Username/Password</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td></tr><tr><td><a href="https://www.ibm.com/downloads/cas/QXL3EAWJ">IBM IoT MessageSight</a></td><td>✔</td><td>✔</td><td>✔</td><td>Username/Password</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✘</td><td>✔</td></tr><tr><td><a href="https://www.ibm.com/us-en/marketplace/watson-iot-platform-message-gateway">IBM Watson IoT Platform</a></td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✘</td><td>✔</td></tr><tr><td><a href="https://www.ibm.com/support/knowledgecenter/SSFKSJ_7.5.0/com.ibm.mq.pro.doc/q001020_.htm">IBM WebSphere MQ Middleware</a></td><td>✔</td><td>✔</td><td>✔</td><td>Username/Password, client certificate</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✘</td><td>✘</td><td>✔</td></tr><tr><td><a href="https://github.com/Cicizz/jmqtt">Jmqtt</a></td><td>✔</td><td>✔</td><td>✔</td><td>Username/Password, Client certificates</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✘</td><td>✔</td><td>✔</td><td>✘</td><td>✔</td></tr><tr><td><a href="http://mqtt.jorammq.com/">JoramMQ</a></td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✘</td><td>✘</td></tr><tr><td><a href="https://github.com/cesanta/mongoose">Mongoose</a></td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✘</td><td>✔</td><td>✔</td><td>✘</td><td>✔</td><td>✔</td><td>✘</td><td>✔</td></tr><tr><td><a href="https://github.com/andsel/moquette">moquette</a></td><td>✔</td><td>✔</td><td>✔</td><td>?</td><td>✔</td><td>✘</td><td>✔</td><td>✔</td><td><strong>rm</strong></td><td>✔</td><td>✘</td><td>✘</td><td>✔</td></tr><tr><td><a href="https://github.com/moscajs/mosca">mosca</a></td><td>✔</td><td>✔</td><td>✘</td><td>✔</td><td>✘</td><td>✘</td><td>✔</td><td>✔</td><td>✘</td><td>✔</td><td>✘</td><td>✘</td><td>✘</td></tr><tr><td><a href="https://mosquitto.org/">mosquitto</a></td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>§</td><td>✔</td><td>✔</td><td>✘</td><td>✔</td></tr><tr><td><a href="https://github.com/mqttjs/MQTT.js">MQTT.js</a></td><td>✔</td><td>✔</td><td>✔</td><td>§</td><td>✘</td><td>✘</td><td>✔</td><td>✔</td><td>✘</td><td>✔</td><td>✘</td><td>✘</td><td>✔</td></tr><tr><td><a href="https://github.com/chkr1011/MQTTnet">MQTTnet</a></td><td>✔</td><td>✔</td><td>✔</td><td>§</td><td>§</td><td>§</td><td>✔</td><td>✔</td><td>§</td><td>§</td><td>§</td><td><strong>rm</strong></td><td>✔</td></tr><tr><td><a href="https://github.com/Wizzercn/MqttWk">MqttWk</a></td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>?</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✘</td><td>✘</td><td>✔</td></tr><tr><td><a href="http://www.rabbitmq.com/blog/2012/09/12/mqtt-adapter/">RabbitMQ</a></td><td>✔</td><td>✔</td><td>✘</td><td>SASL</td><td>✘</td><td>✘</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✘</td><td>✔</td></tr><tr><td><a href="https://www.softwareag.com/de/products/az/universal_messaging/default.html">Software AG Universal Messaging</a></td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>§</td><td>✘</td><td>✔</td><td>✔</td><td>§</td><td><strong>rm</strong></td><td>✘</td><td>✘</td><td>✔</td></tr><tr><td><a href="http://dev.solacesystems.com/tech">Solace</a></td><td>✔</td><td>✔</td><td>✘</td><td>Basic, client certificate, Kerberos</td><td>§</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✘</td><td>✘</td><td>✔</td></tr><tr><td><a href="http://www.swiftmq.com/landing/router/index.html">SwiftMQ</a></td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✘</td><td>✔</td><td>✔</td><td>✔</td><td>✘</td><td>✔</td><td>✘</td><td>✔</td></tr><tr><td><a href="https://github.com/trafero/tstack">TraferoTstack</a></td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✘</td><td>✘</td><td>✔</td><td>✔</td><td>✘</td><td>✘</td><td>✘</td><td>✘</td><td>✘</td></tr><tr><td><a href="https://vernemq.com/">VerneMQ</a></td><td>✔</td><td>✔</td><td>✔</td><td>Username/Password</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✘</td><td>✔</td></tr></tbody></table><h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><ul><li>✔ 表示支持</li><li>✘ 表示不支持</li><li>? 表示未知</li><li>§ 表示支持但有限制</li><li>rm 表示(roadmap)路线图规划中也就是计划支持。</li></ul><h1 id="不再支持或已中止的软件和服务"><a href="#不再支持或已中止的软件和服务" class="headerlink" title="不再支持或已中止的软件和服务"></a>不再支持或已中止的软件和服务</h1><ul><li><a href="http://2lemetry.com/platform/">2lemetry</a> 已被 Amazon AWS 私下购买, 请看 <a href="https://techcrunch.com/2015/03/12/amazon-has-quietly-acquired-2lemetry-to-build-out-its-internet-of-things-strategy/?guccounter=1">the techcrunch article</a>.</li><li><a href="https://github.com/apache/activemq-apollo">Apache ActiveMQ Apollo</a> 已中止, 请看 <a href="http://activemq.2283324.n4.nabble.com/Is-Apollo-Support-Cluster-Deployment-td4699916.html">this link</a>.</li><li><a href="http://mqtt.jorammq.com/">JoramMQ</a> 似乎已中止</li><li><a href="https://developer.ibm.com/iotplatform/messagegateway/">IBM IoT Message gateway</a> 现在变成了 <a href="https://www.ibm.com/us-en/marketplace/watson-iot-platform-message-gateway">IBM Watson IoT Platform</a>.</li><li><a href="https://github.com/moscajs/mosca">mosca</a> 已中止</li><li>RSMB 现在变成了 <a href="https://www.softwareag.com/de/products/az/universal_messaging/default.html">Software AG Universal Messaging</a>. 但是，其文档奇差无比。</li><li><a href="https://github.com/trafero/tstack">TraferoTstack</a> 自2017年以来没有更新， 已基本停止维护。</li></ul><h1 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h1><ul><li><a href="https://aws.amazon.com/en/iot/">AWS IoT Services</a> 保留了一些以 <code>$</code> 开头的主题.</li><li><a href="https://clearblade.com/">ClearBlade</a> 保留了一些以 <code>$</code> 开头的主题.</li><li><a href="https://mosquitto.org/">mosquitto</a> 的集群是在后端级别实现的(比如redis, amqp等)。</li><li><a href="https://github.com/mqttjs/MQTT.js">MQTT.js</a> 接受提供用户名和密码的连接，但实际上并不对连接进行身份验证。</li><li><a href="https://www.softwareag.com/de/products/az/universal_messaging/default.html">Software AG Universal Messaging</a> 提供 Active/Active 集群（通过专有协议）和桥接（通过专有协议）。</li><li><a href="http://dev.solacesystems.com/tech">Solace</a> 没有提供一个broker之间专有的桥接方案.</li><li><a href="https://github.com/chkr1011/MQTTnet">MQTTnet</a> 提供客户端和服务器实现。所有特性可以按需扩展（或保留）。 这主要是面向.Net开发人员，以构建其自定义服务器和客户端实现。 但是，标准已经提供了许多功能。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;From: &lt;a href=&quot;https://github.com/mqtt/mqtt.github.io/wiki/server-support&quot;&gt;https://github.com/mqtt/mqtt.github.io/wiki/serve</summary>
      
    
    
    
    <category term="经验教程" scheme="https://www.chaoswork.cn/categories/%E7%BB%8F%E9%AA%8C%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="mqtt" scheme="https://www.chaoswork.cn/tags/mqtt/"/>
    
  </entry>
  
  <entry>
    <title>自动备份远程文件到本地</title>
    <link href="https://www.chaoswork.cn/20191220-2.html"/>
    <id>https://www.chaoswork.cn/20191220-2.html</id>
    <published>2019-12-20T10:35:51.000Z</published>
    <updated>2021-03-11T10:04:17.391Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>自动登录远程机器，自动输入密码和yes/no等，可以利用expect，需要先安装。</p></li><li><p>自动备份远程机器上的文件(<code>remote_bak.sh</code>)：</p><figure class="highlight bash" data-lang="bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /usr/bin/expect</span></span><br><span class="line"><span class="built_in">set</span> <span class="built_in">timeout</span> 3600</span><br><span class="line"><span class="built_in">set</span> password yourpassword</span><br><span class="line">spawn scp -r remote_host:/path/to/files  /local/path/to/remote_baks/</span><br><span class="line">expect &#123;</span><br><span class="line">  <span class="string">&quot;(yes/no)?&quot;</span> &#123;</span><br><span class="line">    send <span class="string">&quot;yes\n&quot;</span></span><br><span class="line">    expect <span class="string">&quot;*assword:&quot;</span> &#123; send <span class="string">&quot;<span class="variable">$password</span>\n&quot;</span>&#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="string">&quot;*assword:&quot;</span> &#123;</span><br><span class="line">    send <span class="string">&quot;<span class="variable">$password</span>\n&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">expect <span class="string">&quot;100%&quot;</span></span><br><span class="line">expect eof</span><br></pre></td></tr></table></figure></li><li><p>自动备份远程机器数据库到本地:</p><figure class="highlight bash" data-lang="bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/usr/bin/bash</span></span><br><span class="line">CMD_PROMPT=<span class="string">&quot;.+@.+:.+#&quot;</span></span><br><span class="line">user=root</span><br><span class="line">host=hw</span><br><span class="line">password=<span class="built_in">pwd</span></span><br><span class="line">database=db</span><br><span class="line">expect &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">    set timeout 3600</span></span><br><span class="line"><span class="string">    spawn ssh $user@$host</span></span><br><span class="line"><span class="string">    expect &#123;</span></span><br><span class="line"><span class="string">        &quot;yes/no&quot; &#123; send &quot;yes\n&quot;;exp_continue &#125;</span></span><br><span class="line"><span class="string">        &quot;*password:&quot; &#123; send &quot;$password\n&quot; &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    expect -re $CMD_PROMPT &#123; send &quot;sudo mysqldump  $&#123;database&#125; &gt; $&#123;database&#125;_temp.sql\n&quot; &#125;</span></span><br><span class="line"><span class="string">    expect -re $CMD_PROMPT &#123; send &quot;exit\n&quot; &#125;</span></span><br><span class="line"><span class="string">    expect eof</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="built_in">mkdir</span> mysqlbak</span><br><span class="line">expect &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">    spawn scp $user@$host:~/$&#123;database&#125;_temp.sql mysqlbak/</span></span><br><span class="line"><span class="string">    expect &#123;</span></span><br><span class="line"><span class="string">        &quot;yes/no&quot; &#123; send &quot;yes\n&quot;;exp_continue &#125;</span></span><br><span class="line"><span class="string">        &quot;*password:&quot; &#123; send &quot;$password\n&quot; &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    expect eof</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure></li><li><p>创建crontab</p><figure class="highlight bash" data-lang="bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#早上5点执行脚本</span></span><br><span class="line">crontab -e</span><br><span class="line">0 5 * * * /absolute/path/to/remote_bak.sh &gt; /dev/null 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure></li></ol><p>大功告成！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;自动登录远程机器，自动输入密码和yes/no等，可以利用expect，需要先安装。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;自动备份远程机器上的文件(&lt;code&gt;remote_bak.sh&lt;/code&gt;)：&lt;/p&gt;
&lt;figure class=&quot;highligh</summary>
      
    
    
    
    <category term="编程基础" scheme="https://www.chaoswork.cn/categories/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
    <category term="linux基础" scheme="https://www.chaoswork.cn/categories/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/linux%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="编程基础" scheme="https://www.chaoswork.cn/tags/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
    <category term="linux基础" scheme="https://www.chaoswork.cn/tags/linux%E5%9F%BA%E7%A1%80/"/>
    
    <category term="远程备份" scheme="https://www.chaoswork.cn/tags/%E8%BF%9C%E7%A8%8B%E5%A4%87%E4%BB%BD/"/>
    
  </entry>
  
  <entry>
    <title>数据库自动备份脚本</title>
    <link href="https://www.chaoswork.cn/20191220-1.html"/>
    <id>https://www.chaoswork.cn/20191220-1.html</id>
    <published>2019-12-20T08:15:23.000Z</published>
    <updated>2021-03-11T10:04:17.391Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>脚本<code>mysqlbak.sh</code></p><figure class="highlight bash" data-lang="bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">tool=/usr/bin/mysqldump</span><br><span class="line"><span class="built_in">dd</span>=`<span class="built_in">date</span> +%Y%m%d`</span><br><span class="line">username=root</span><br><span class="line">password=123456</span><br><span class="line">database=db</span><br><span class="line">backup_count=2</span><br><span class="line">backup_dir=~/mysqlbackup</span><br><span class="line"><span class="comment"># 创建备份目录</span></span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$backup_dir</span></span><br><span class="line"><span class="comment">#创建备份 mysqldump -u root -p123456 users &gt; /root/mysqlbackup/users-$filename.sql</span></span><br><span class="line"><span class="variable">$tool</span> -u <span class="variable">$username</span> -p<span class="variable">$password</span> <span class="variable">$database</span> &gt; <span class="variable">$backup_dir</span>/<span class="variable">$database</span>-<span class="variable">$dd</span>.sql</span><br><span class="line"><span class="comment">#写备份日志</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;create <span class="variable">$backup_dir</span>/<span class="variable">$database</span>-<span class="variable">$dd</span>.sql&quot;</span> &gt;&gt; <span class="variable">$backup_dir</span>/action.log</span><br><span class="line"><span class="comment">#找出需要删除的备份</span></span><br><span class="line">delfile=`<span class="built_in">ls</span> -l -crt  <span class="variable">$backup_dir</span>/*.sql | awk <span class="string">&#x27;&#123;print $9 &#125;&#x27;</span> | <span class="built_in">head</span> -1`</span><br><span class="line"><span class="comment">#判断现在的备份数量是否大于$backup_count </span></span><br><span class="line">count=`<span class="built_in">ls</span> -l -crt  <span class="variable">$backup_dir</span>/*.sql | awk <span class="string">&#x27;&#123;print $9 &#125;&#x27;</span> | <span class="built_in">wc</span> -l`</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$count</span> -gt <span class="variable">$backup_count</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  <span class="built_in">rm</span> <span class="variable">$delfile</span>  <span class="comment">#删除最早生成的备份，只保留backup_count数量的备份</span></span><br><span class="line">  <span class="comment">#写删除文件日志</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;delete <span class="variable">$delfile</span>&quot;</span> &gt;&gt; <span class="variable">$backup_dir</span>/action.log</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></li><li><p>创建crontab</p><figure class="highlight bash" data-lang="bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#早上5点执行脚本</span></span><br><span class="line">crontab -e</span><br><span class="line">0 5 * * * /absolute/path/to/mysqlbak.sh &gt; /dev/null 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure></li></ol><p>大功告成！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;脚本&lt;code&gt;mysqlbak.sh&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot; data-lang=&quot;bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;l</summary>
      
    
    
    
    <category term="编程基础" scheme="https://www.chaoswork.cn/categories/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
    <category term="数据库" scheme="https://www.chaoswork.cn/categories/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="编程基础" scheme="https://www.chaoswork.cn/tags/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
    <category term="linux基础" scheme="https://www.chaoswork.cn/tags/linux%E5%9F%BA%E7%A1%80/"/>
    
    <category term="数据库" scheme="https://www.chaoswork.cn/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>过滤日志目录中所有日志里最近1小时的错误记录及上下5行</title>
    <link href="https://www.chaoswork.cn/20191211-1.html"/>
    <id>https://www.chaoswork.cn/20191211-1.html</id>
    <published>2019-12-11T15:35:51.000Z</published>
    <updated>2021-03-11T10:04:17.391Z</updated>
    
    <content type="html"><![CDATA[<p>这里假设日志文件中的时间标准格式为：<code>[YYYY-mm-ddTHH:MM:SS.ZZZ]</code><br>例如，日志格式：</p><figure class="highlight plaintext" data-lang="plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[2019-12-11T15:15:05.533] [INFO] default - Executing (default): SELECT count(*) AS `count` FROM `watch` AS `watch` WHERE `watch`.`fmid` = 25;</span><br><span class="line">&#123;</span><br><span class="line">   &quot;i&quot;: &quot;am&quot;,</span><br><span class="line">   &quot;a&quot;: &quot;json file&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>命令：</p><figure class="highlight bash" data-lang="bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find ./ -<span class="built_in">type</span> f -mmin -60 |xargs awk <span class="string">&#x27;$1~/[0-9]&#123;4&#125;-[0-9]&#123;2&#125;-[0-9]&#123;2&#125;/ &#123;t=substr($1,2,19); h=strftime(&quot;%Y-%m-%dT%T&quot;, systime()-3600); if(t&gt;h)&#123;print $0; curline=NR&#125;&#125; curline&gt;0&amp;&amp;NR&gt;curline&amp;&amp;NR&lt;=curline+999 &#123;if (FNR==1) &#123;curline=0&#125; else &#123;print $0&#125;&#125;&#x27;</span> | grep <span class="string">&quot;ERROR&quot;</span> -A 5 -B 5</span><br></pre></td></tr></table></figure><p>解释：</p><ul><li><code>find ./ -type f -mmin -60</code> 找到一小时以内修改过的文件</li><li><code>&#39;$1~/[0-9]&#123;4&#125;-[0-9]&#123;2&#125;-[0-9]&#123;2&#125;/</code>  匹配日期行，对于日期行执行后面大括号的动作</li><li><code>t=substr($1,2,19);</code>  取中括号中的日期</li><li><code>h=strftime(&quot;%Y-%m-%dT%T&quot;, systime()-3600);</code> 取当前时间一个小时前的日期</li><li><code>if(t&gt;h)&#123;print $0; curline=NR&#125;</code>  比较日期，如果在一小时内，则打印该行，并记录当前行号</li><li><code>curline&gt;0&amp;&amp;NR&gt;curline&amp;&amp;NR&lt;=curline+999</code>  匹配上一次打印的日期行后面的行，尽量覆盖直至下一个日期行，匹配到就执行后面的大括号里的动作</li><li><code>if (FNR==1) &#123;curline=0&#125; else &#123;print $0&#125;</code>  如果切换了下一个文件，就重置匹配日期行记录（不然后面的文件假如开头不是符合条件的行也都会打印出来），否则就继续打印当前文件的剩余行</li><li><code>grep &quot;ERROR&quot; -A 5 -B 5</code>  在前面打印的所有行中将ERROR前后5行过滤出来</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这里假设日志文件中的时间标准格式为：&lt;code&gt;[YYYY-mm-ddTHH:MM:SS.ZZZ]&lt;/code&gt;&lt;br&gt;例如，日志格式：&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot; data-lang=&quot;plaintext&quot;&gt;&lt;table</summary>
      
    
    
    
    <category term="编程基础" scheme="https://www.chaoswork.cn/categories/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
    <category term="linux基础" scheme="https://www.chaoswork.cn/categories/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/linux%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="编程基础" scheme="https://www.chaoswork.cn/tags/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
    <category term="linux基础" scheme="https://www.chaoswork.cn/tags/linux%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Mongoose中使用shortid遇到的坑</title>
    <link href="https://www.chaoswork.cn/20191128-1.html"/>
    <id>https://www.chaoswork.cn/20191128-1.html</id>
    <published>2019-11-28T09:51:24.000Z</published>
    <updated>2021-03-11T10:04:17.391Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>mongoose用的不多，感觉还挺好用，对比mysql/mariadb的orm如sequelize, bookshelf等，要灵活的多，不过其接口和参数比较多，有一些默认的行为，用起来需要比较小心，要多进行测试。</p></blockquote><p>shortid 是一个比较不错的生成较短的唯一ID的库，根据前人经验和shortid文档，将mongodb document的默认_id设置为shortid，感觉是个不错的主意。但是经过使用，我碰到了一些棘手的问题，然后我打算放弃使用shortid。</p><p>很多开源的小项目中使用shortid定义_id是这样的：</p><figure class="highlight plaintext" data-lang="plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_id: &#123; type: String, default: shortid.generate &#125;</span><br></pre></td></tr></table></figure><p>这样挺好（如果使用时提前知道一些潜在问题并规避的话），有些问答文章中答主这么写：</p><figure class="highlight plaintext" data-lang="plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_id: &#123; type: String, unique: true, default: shortid.generate &#125;</span><br></pre></td></tr></table></figure><p>我不知道是版本问题还是答主想当然，这样是会报错的:</p><figure class="highlight plaintext" data-lang="plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongoose: Cannot specify a custom index on `_id` for model name &quot;xxx&quot;, MongoDB does not allow overwriting the default `_id` index. See http://bit.ly/mongodb-id-index</span><br></pre></td></tr></table></figure><p>也就是你可以自定义_id的类型和默认值，但是不能自定义其相关索引。那么自定义类型和默认值就没有问题了吗？事实上，我没有在任何官方的说法中看到以上用法。而事实上确实有些问题（也就是上面说的需要规避的）, 我碰到有下面几点：</p><ol><li><p>Model.findOneAndUpdate(cond, data, {upsert: true}) 调用mongodb的findAndModify函数，这样会跳过我们的_id定义，在插入数据是生成ObjectId类型的_id; 导致后续查询失败。</p></li><li><p>Model.create函数更神奇：当传递array做参数时，会好好调用shortid.generate生成_id，当传递单个object, 则生成ObjectId。从mongoose官方文档上你看不出来为什么会有这个区别（代码上我也没看出来，没有更深入debug）。</p></li></ol><p>这俩问题暂时都没有找到很好的解决办法，只能规避；想用shortid，创建时记得用Model.create(array)或这document.save。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;mongoose用的不多，感觉还挺好用，对比mysql/mariadb的orm如sequelize, bookshelf等，要灵活的多，不过其接口和参数比较多，有一些默认的行为，用起来需要比较小心，要多进行测试。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
      
    
    
    
    <category term="经验教程" scheme="https://www.chaoswork.cn/categories/%E7%BB%8F%E9%AA%8C%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="nodejs" scheme="https://www.chaoswork.cn/tags/nodejs/"/>
    
    <category term="mongoose" scheme="https://www.chaoswork.cn/tags/mongoose/"/>
    
    <category term="shortid" scheme="https://www.chaoswork.cn/tags/shortid/"/>
    
  </entry>
  
  <entry>
    <title>完全卸载删除gitlab</title>
    <link href="https://www.chaoswork.cn/20191018-1.html"/>
    <id>https://www.chaoswork.cn/20191018-1.html</id>
    <published>2019-10-18T09:51:24.000Z</published>
    <updated>2021-03-11T10:04:17.391Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://yq.aliyun.com/articles/114619" target="_blank" rel="noopener noreferrer"> &gt;&gt;本文来源</a></p><blockquote><p>gitlab 项目比较庞大，卸载起来有点麻烦，所以这里记录一下。</p></blockquote><h3 id="1、停止gitlab"><a href="#1、停止gitlab" class="headerlink" title="1、停止gitlab"></a>1、停止gitlab</h3><figure class="highlight bash" data-lang="bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlab-ctl stop</span><br></pre></td></tr></table></figure><h3 id="2、卸载gitlab（注意这里写的是gitlab-ce）"><a href="#2、卸载gitlab（注意这里写的是gitlab-ce）" class="headerlink" title="2、卸载gitlab（注意这里写的是gitlab-ce）"></a>2、卸载gitlab（注意这里写的是gitlab-ce）</h3><figure class="highlight bash" data-lang="bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -e gitlab-ce</span><br></pre></td></tr></table></figure><h3 id="3、查看gitlab进程"><a href="#3、查看gitlab进程" class="headerlink" title="3、查看gitlab进程"></a>3、查看gitlab进程</h3><figure class="highlight bash" data-lang="bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps aux | grep gitlab</span><br></pre></td></tr></table></figure><h3 id="4、杀掉第一个进程（就是带有好多…………-的进程）"><a href="#4、杀掉第一个进程（就是带有好多…………-的进程）" class="headerlink" title="4、杀掉第一个进程（就是带有好多………….的进程）"></a>4、杀掉第一个进程（就是带有好多………….的进程）</h3><p><img src="/images/2019/10/1571412219945.png"></p><figure class="highlight bash" data-lang="bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">kill</span> -9 18777</span><br></pre></td></tr></table></figure><p>杀掉后，在ps aux | grep gitlab确认一遍，还有没有gitlab的进程</p><h3 id="5、删除所有包含gitlab文件"><a href="#5、删除所有包含gitlab文件" class="headerlink" title="5、删除所有包含gitlab文件"></a>5、删除所有包含gitlab文件</h3><figure class="highlight bash" data-lang="bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name gitlab | xargs <span class="built_in">rm</span> -rf</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://yq.aliyun.com/articles/114619&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt; &amp;gt;&amp;gt;本文来源&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;gitlab 项目</summary>
      
    
    
    
    <category term="经验教程" scheme="https://www.chaoswork.cn/categories/%E7%BB%8F%E9%AA%8C%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="gitlab" scheme="https://www.chaoswork.cn/tags/gitlab/"/>
    
  </entry>
  
  <entry>
    <title>Authentication in MariaDB 10.4 (MariaDB 10.4 root账号密码问题)</title>
    <link href="https://www.chaoswork.cn/20191012-1.html"/>
    <id>https://www.chaoswork.cn/20191012-1.html</id>
    <published>2019-10-12T09:51:24.000Z</published>
    <updated>2021-03-11T10:04:17.391Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>昨天更换工作电脑，重装了一下ubuntu下的mariadb，ubuntu默认源下的mariadb 是10.0 版本，默认charset 是utf8mb4, 使用sequelize不好解决<code>Index column size too large. The maximum column size is 767 bytes.</code>限制的问题，遂去官网换了10.4版本。结果安装好了又怎么都登录不上去，用<code>mysqld_safe --skip-grant-tables</code>进去设置root密码，又碰到<code>Column &#39;Password&#39; is not updatable</code>，无法修改密码，无奈只好去官网看看是不是又出幺蛾子了，一找还真是有一篇文章讲这个问题，现把原文摘录贴过来备忘。</p></blockquote><h2 id="Authentication-in-MariaDB-10-4-—-Understanding-the-Changes-original-link"><a href="#Authentication-in-MariaDB-10-4-—-Understanding-the-Changes-original-link" class="headerlink" title="Authentication in MariaDB 10.4 — Understanding the Changes (original link)"></a>Authentication in MariaDB 10.4 — Understanding the Changes <a href="https://mariadb.org/authentication-in-mariadb-10-4/">(original link)</a></h2><h3 id="In-a-nutshell-简要"><a href="#In-a-nutshell-简要" class="headerlink" title="In a nutshell (简要)"></a>In a nutshell (简要)</h3><p><strong>The password storage has changed.</strong> All user accounts, passwords, and global privileges are now stored in a <code>mysql.global_priv</code> table. What happened to the <code>mysql.user</code> table? It still exists and has exactly the same set of columns as before, but it’s now <strong>a view</strong> over <code>mysql.global_priv</code>. If you happen to have tools that analyze mysql.user table — they should continue working as before.</p><p>为什么改不了密码这里说的很清楚了，<code>mysql.user</code>表不见了，现在它只是<code>mysql.global_priv</code>表的一个视图。所以严格来说也不是不能改密码，只是不能修改原来的<code>mysql.user</code>表了。</p><p><strong>One can specify more than one authentication method per account.</strong> They all will work as alternatives. For example, a DBA might start migrating users to the more secure ed25519 password plugin, but keep the old SHA1 one as an alternative for the transitional period.</p><p>mariadb 10.4 可以给用户设置多种认证方式了，这里有需要的话再看。</p><p><strong>The default authentication for new installations is now more secure.</strong> The open-for-everyone all-powerful root account is gone, at last. And installation scripts will no longer shout at you “PLEASE REMEMBER TO SET A PASSWORD FOR THE MariaDB root USER !”, because the root account is created secure automatically.</p><p>很好很直接，root密码没了， 也不需要你去设置初始密码了，而且说是这样更安全，什么黑科技？看下面。</p><h3 id="Details"><a href="#Details" class="headerlink" title="Details"></a>Details</h3><p>Technically, a new MariaDB installation will have two all-powerful accounts — <code>root</code> and the OS user that owns the data directory, typically <code>mysql</code>. They are created as</p><figure class="highlight plaintext" data-lang="plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER root@localhost IDENTIFIED VIA unix_socket OR mysql_native_password USING &#x27;invalid&#x27;</span><br><span class="line">CREATE USER mysql@localhost IDENTIFIED VIA unix_socket OR mysql_native_password USING &#x27;invalid&#x27;</span><br></pre></td></tr></table></figure><p>Using <code>unix_socket</code> means that if you are the system root user, you can login as root@locahost without a password. This technique was pioneered by Otto Kekäläinen in MariaDB packages in Debian as early as MariaDB 10.0. It is based on a simple fact, that asking the system root for a password adds no extra security — root has full access to all the data files and all process memory anyway. But not asking for a password means, there is no root password to forget (bye-bye numerous tutorials “how to reset MariaDB root password”). And if you want to script some tedious database work, there is no need to store the root password in plain text for the scipt to use (bye-bye debian-sys-maint user).</p><p>mariadb 10.4安装时创建了2个默认账号: root，mysql。初始只提供了<code>unix_socket</code>方式认证。这样登录mysql你就不需要<code>mysql -uroot -p</code>了， 直接<code>sudo mysql</code>，只要你有系统root权限就可以进去。</p><p>Still, some users complained that they want to log in as MariaDB root without using sudo. This is why in 10.4 the root user has a second authentication method — conventional MariaDB password. By default it is disabled (“invalid” is not a valid password hash), but one can set the password with a usual SET PASSWORD statement. And still retain the password-less access via sudo!</p><p>如果你不想用sudo登录mysql, mariadb 10.4依然提供了传统的密码登录的方式，只是初始是禁用的(invalid)。你可以登录进mysql用<code>SET PASSWORD</code>的方式设置密码。</p><p>Now, what happens, if you install MariaDB locally (for example, from a tarball)? You definitely would not want to use sudo to be able to login. This is why MariaDB creates a second all-powerful user with the same name as a system user that owns the data directory. In local (not system-wide) installations, this will be the user, who installed MariaDB — she automatically gets convenient password-less root-like access, because, frankly, she can access all the data files anyway.</p><p>And even if MariaDB is installed system-wide, you may not want to run your database maintenance scripts as system root — now you can run them as system <code>mysql</code> user. And you will know, that they will never destroy your entire system, even if you <a href="https://github.com/MrMEEE/bumblebee-Old-and-abbandoned/issues/123">make a typo in a shell script</a>.</p><p>mariadb 10.4 在linux创建了mysql用户，所有数据文件都在mysql用户下面，所以它在数据库里也一并创建了<code>unix_socket</code>认证的<code>mysql</code> 用户，这样你可以不在用root和sudo的情况下通过mysql用户无密码操作数据库，而且也不用担心<code>rm -rf</code>不小心删除系统的问题，这对于脚本操作非常有用。</p><h3 id="Cookbook"><a href="#Cookbook" class="headerlink" title="Cookbook"></a>Cookbook</h3><p>（下面就不翻译或解释了)</p><p>“This is all great”, you may be thinking, “but I’m a seasoned MariaDB DBA, I can write SQL in my sleep, do I need to do something different from now on”? Unfortunately, yes.</p><p><strong>After installing MariaDB system-wide</strong> the first thing you’ve <strong>got used to doing</strong> is logging in into the unprotected root account and protecting it, that is, setting the root password:</p><figure class="highlight bash" data-lang="bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo dnf install MariaDB-server</span><br><span class="line">$ mysql -uroot</span><br><span class="line">...</span><br><span class="line">MariaDB&gt; <span class="built_in">set</span> password = password(<span class="string">&quot;XH4VmT3_jt&quot;</span>);</span><br></pre></td></tr></table></figure><p><strong>This is not only unnecessary now, it will simply not work</strong> — there is no unprotected root account. To login as root use</p><figure class="highlight bash" data-lang="bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo dnf install MariaDB-server</span><br><span class="line">$ sudo mysql</span><br></pre></td></tr></table></figure><p>Note that it implies you are connecting via the unix socket, not tcp. If you happen to have <code>protocol=tcp</code> in a system-wide <code>/etc/my.cnf</code> file, use <code>sudo mysql --protocol=socket</code>.</p><p><strong>After installing MariaDB locally</strong> you’ve also <strong>used to</strong> connect to the unprotected root account using mysql -uroot. <strong>It will not work either</strong>, use simply mysql without specifying a username.</p><p><strong>You want passwords back, no unix_socket authentication anymore?</strong> Run</p><figure class="highlight plaintext" data-lang="plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER root@localhost IDENTIFIED VIA mysql_native_password USING PASSWORD(&quot;verysecret&quot;)</span><br></pre></td></tr></table></figure><p><strong>Forgot your root password?</strong> No problem — you can still connect using sudo and change the password. Oh, you have also removed unix_socket authentication? In that case, do as follows:</p><ol><li>restart MariaDB with <code>--skip-grant-tables</code></li><li>login into the unprotected server</li><li>run <code>FLUSH PRIVILEGES</code> (note, before 10.4 it would’ve been the last step, not anymore)</li><li>run <code>SET PASSWORD FOR root@localhost</code> to change the root password</li></ol><p><strong>You want to peek inside privilege tables?</strong> Old <code>mysql.user</code> table still exists, you can select from it as before, although you cannot update it anymore. It doesn’t show alternative authentication plugins? Yes, this was one of the reasons for switching to <code>mysql.global_priv</code> table — complex authentication rules did not fit into rigid structure of a relational table. But you can, of course, select from the new table too. For example, with</p><figure class="highlight plaintext" data-lang="plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select concat(user, &#x27;@&#x27;, host, &#x27; =&gt; &#x27;, json_detailed(priv)) from mysql.global_priv;</span><br></pre></td></tr></table></figure><p>This is it. Remember, <strong>the best way to keep your password safe is not to have one.</strong> And have fun!</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;昨天更换工作电脑，重装了一下ubuntu下的mariadb，ubuntu默认源下的mariadb 是10.0 版本，默认charset 是utf8mb4, 使用sequelize不好解决&lt;code&gt;Index column size too lar</summary>
      
    
    
    
    <category term="经验教程" scheme="https://www.chaoswork.cn/categories/%E7%BB%8F%E9%AA%8C%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="数据库" scheme="https://www.chaoswork.cn/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="mariadb" scheme="https://www.chaoswork.cn/tags/mariadb/"/>
    
  </entry>
  
  <entry>
    <title>github算法面试资料(Java版)</title>
    <link href="https://www.chaoswork.cn/20190918-2.html"/>
    <id>https://www.chaoswork.cn/20190918-2.html</id>
    <published>2019-09-18T09:51:24.000Z</published>
    <updated>2021-03-11T10:04:17.391Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Interviews"><a href="#Interviews" class="headerlink" title="Interviews"></a>Interviews</h1><blockquote><p>Maintainer - <a href="https://github.com/kdn251">Kevin Naughton Jr.</a></p></blockquote><h2 id="Translations"><a href="#Translations" class="headerlink" title="Translations"></a>Translations</h2><ul><li><a href="https://github.com/kdn251/interviews/blob/master/README-zh-cn.md">简体中文</a></li></ul><h2 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h2><ul><li><a href="#youtube">YouTube</a></li><li><a href="#instagram">Instagram</a></li><li><a href="#articles">Articles</a></li><li><a href="#online-judges">Online Judges</a></li><li><a href="#live-coding-practice">Live Coding Practice</a></li><li><a href="#data-structures">Data Structures</a></li><li><a href="#algorithms">Algorithms</a></li><li><a href="#greedy-algorithms">Greedy Algorithms</a></li><li><a href="#bitmasks">Bitmasks</a></li><li><a href="#runtime-analysis">Runtime Analysis</a></li><li><a href="#video-lectures">Video Lectures</a></li><li><a href="#interview-books">Interview Books</a></li><li><a href="#computer-science-news">Computer Science News</a></li><li><a href="#directory-tree">Directory Tree</a></li></ul><h2 id="YouTube"><a href="#YouTube" class="headerlink" title="YouTube"></a>YouTube</h2><ul><li><a href="https://www.youtube.com/channel/UCKvwPt6BifPP54yzH99ff1g">Kevin Naughton Jr.</a></li></ul><h2 id="Instagram"><a href="#Instagram" class="headerlink" title="Instagram"></a>Instagram</h2><ul><li><a href="https://www.instagram.com/programeme/">Programeme</a></li></ul><h2 id="Articles"><a href="#Articles" class="headerlink" title="Articles"></a>Articles</h2><ul><li><a href="https://medium.com/@Naughton/starting-work-b06e10f6007e">Starting Work</a></li></ul><h2 id="Online-Judges"><a href="#Online-Judges" class="headerlink" title="Online Judges"></a>Online Judges</h2><ul><li><a href="https://leetcode.com/">LeetCode</a></li><li><a href="https://vjudge.net/">Virtual Judge</a></li><li><a href="https://www.careercup.com/">CareerCup</a></li><li><a href="https://www.hackerrank.com/">HackerRank</a></li><li><a href="https://codefights.com/">CodeFights</a></li><li><a href="https://open.kattis.com/">Kattis</a></li><li><a href="https://www.hackerearth.com/">HackerEarth</a></li><li><a href="https://codility.com/programmers/lessons/1-iterations/">Codility</a></li><li><a href="http://codeforces.com/">Code Forces</a></li><li><a href="https://www.codechef.com/">Code Chef</a></li><li><a href="http://www.spoj.com/">Sphere Online Judge - SPOJ</a></li><li><a href="https://www.interviewbit.com/">InterviewBit</a></li></ul><h2 id="Live-Coding-Practice"><a href="#Live-Coding-Practice" class="headerlink" title="Live Coding Practice"></a>Live Coding Practice</h2><ul><li><a href="https://www.pramp.com/ref/gt4">Pramp</a></li><li><a href="http://www.gainlo.co/#!/">Gainlo</a></li><li><a href="https://refdash.com/">Refdash</a></li><li><a href="https://www.interviewing.io/">Interviewing.io</a></li></ul><h2 id="Data-Structures"><a href="#Data-Structures" class="headerlink" title="Data Structures"></a>Data Structures</h2><h3 id="Linked-List"><a href="#Linked-List" class="headerlink" title="Linked List"></a>Linked List</h3><ul><li>A <em>Linked List</em> is a linear collection of data elements, called nodes, each<br>pointing to the next node by means of a pointer. It is a data structure<br>consisting of a group of nodes which together represent a sequence.</li><li><strong>Singly-linked list</strong>: linked list in which each node points to the next node and the last node points to null</li><li><strong>Doubly-linked list</strong>: linked list in which each node has two pointers, p and n, such that p points to the previous node and n points to the next node; the last node’s n pointer points to null</li><li><strong>Circular-linked list</strong>: linked list in which each node points to the next node and the last node points back to the first node</li><li>Time Complexity:<ul><li>Access: <code>O(n)</code></li><li>Search: <code>O(n)</code></li><li>Insert: <code>O(1)</code></li><li>Remove: <code>O(1)</code></li></ul></li></ul><h3 id="Stack"><a href="#Stack" class="headerlink" title="Stack"></a>Stack</h3><ul><li>A <em>Stack</em> is a collection of elements, with two principle operations: <em>push</em>, which adds to the collection, and<br><em>pop</em>, which removes the most recently added element</li><li><strong>Last in, first out data structure (LIFO)</strong>: the most recently added object is the first to be removed</li><li>Time Complexity:<ul><li>Access: <code>O(n)</code></li><li>Search: <code>O(n)</code></li><li>Insert: <code>O(1)</code></li><li>Remove: <code>O(1)</code></li></ul></li></ul><h3 id="Queue"><a href="#Queue" class="headerlink" title="Queue"></a>Queue</h3><ul><li>A <em>Queue</em> is a collection of elements, supporting two principle operations: <em>enqueue</em>, which inserts an element<br>into the queue, and <em>dequeue</em>, which removes an element from the queue</li><li><strong>First in, first out data structure (FIFO)</strong>: the oldest added object is the first to be removed</li><li>Time Complexity:<ul><li>Access: <code>O(n)</code></li><li>Search: <code>O(n)</code></li><li>Insert: <code>O(1)</code></li><li>Remove: <code>O(1)</code></li></ul></li></ul><h3 id="Tree"><a href="#Tree" class="headerlink" title="Tree"></a>Tree</h3><ul><li>A <em>Tree</em> is an undirected, connected, acyclic graph</li></ul><h3 id="Binary-Tree"><a href="#Binary-Tree" class="headerlink" title="Binary Tree"></a>Binary Tree</h3><ul><li>A <em>Binary Tree</em> is a tree data structure in which each node has at most two children, which are referred to as<br>the <em>left child</em> and <em>right child</em></li><li><strong>Full Tree</strong>: a tree in which every node has either 0 or 2 children</li><li><strong>Perfect Binary Tree</strong>: a binary tree in which all interior nodes have two children and all leave have the same depth</li><li><strong>Complete Tree</strong>: a binary tree in which every level <em>except possibly the last</em> is full and all nodes in the last<br>level are as far left as possible</li></ul><h3 id="Binary-Search-Tree"><a href="#Binary-Search-Tree" class="headerlink" title="Binary Search Tree"></a>Binary Search Tree</h3><ul><li>A binary search tree, sometimes called BST, is a type of binary tree which maintains the property that the value in each<br>node must be greater than or equal to any value stored in the left sub-tree, and less than or equal to any value stored<br>in the right sub-tree</li><li>Time Complexity:<ul><li>Access: <code>O(log(n))</code></li><li>Search: <code>O(log(n))</code></li><li>Insert: <code>O(log(n))</code></li><li>Remove: <code>O(log(n))</code></li></ul></li></ul><img src="/images/2019/09/BST.png?raw=true" alt="Binary Search Tree" width="400" height="500"><h3 id="Trie"><a href="#Trie" class="headerlink" title="Trie"></a>Trie</h3><ul><li>A trie, sometimes called a radix or prefix tree, is a kind of search tree that is used to store a dynamic set or associative<br>array where the keys are usually Strings. No node in the tree stores the key associated with that node; instead, its position<br>in the tree defines the key with which it is associated. All the descendants of a node have a common prefix of the String associated<br>with that node, and the root is associated with the empty String.</li></ul><p><img src="/images/2019/09/trie.png?raw=true" alt="Trie"></p><h3 id="Fenwick-Tree"><a href="#Fenwick-Tree" class="headerlink" title="Fenwick Tree"></a>Fenwick Tree</h3><ul><li>A Fenwick tree, sometimes called a binary indexed tree, is a tree in concept, but in practice is implemented as an implicit data<br>structure using an array. Given an index in the array representing a vertex, the index of a vertex’s parent or child is calculated<br>through bitwise operations on the binary representation of its index. Each element of the array contains the pre-calculated sum of<br>a range of values, and by combining that sum with additional ranges encountered during an upward traversal to the root, the prefix<br>sum is calculated</li><li>Time Complexity:<ul><li>Range Sum: <code>O(log(n))</code></li><li>Update: <code>O(log(n))</code></li></ul></li></ul><p><img src="/images/2019/09/fenwickTree.png?raw=true" alt="Fenwick Tree"></p><h3 id="Segment-Tree"><a href="#Segment-Tree" class="headerlink" title="Segment Tree"></a>Segment Tree</h3><ul><li>A Segment tree, is a tree data structure for storing intervals, or segments. It allows querying which of the stored segments contain<br>a given point</li><li>Time Complexity:<ul><li>Range Query: <code>O(log(n))</code></li><li>Update: <code>O(log(n))</code></li></ul></li></ul><p><img src="/images/2019/09/segmentTree.png?raw=true" alt="Segment Tree"></p><h3 id="Heap"><a href="#Heap" class="headerlink" title="Heap"></a>Heap</h3><ul><li>A <em>Heap</em> is a specialized tree based structure data structure that satisfies the <em>heap</em> property: if A is a parent node of<br>B, then the key (the value) of node A is ordered with respect to the key of node B with the same ordering applying across the entire heap.<br>A heap can be classified further as either a “max heap” or a “min heap”. In a max heap, the keys of parent nodes are always greater<br>than or equal to those of the children and the highest key is in the root node. In a min heap, the keys of parent nodes are less than<br>or equal to those of the children and the lowest key is in the root node</li><li>Time Complexity:<ul><li>Access Max / Min: <code>O(1)</code></li><li>Insert: <code>O(log(n))</code></li><li>Remove Max / Min: <code>O(log(n))</code></li></ul></li></ul><img src="/images/2019/09/heap.png?raw=true" alt="Max Heap" width="400" height="500"><h3 id="Hashing"><a href="#Hashing" class="headerlink" title="Hashing"></a>Hashing</h3><ul><li><em>Hashing</em> is used to map data of an arbitrary size to data of a fixed size. The values returned by a hash<br>function are called hash values, hash codes, or simply hashes. If two keys map to the same value, a collision occurs</li><li><strong>Hash Map</strong>: a <em>hash map</em> is a structure that can map keys to values. A hash map uses a hash function to compute<br>an index into an array of buckets or slots, from which the desired value can be found.</li><li>Collision Resolution</li><li><strong>Separate Chaining</strong>: in <em>separate chaining</em>, each bucket is independent, and contains a list of entries for each index. The<br>time for hash map operations is the time to find the bucket (constant time), plus the time to iterate through the list</li><li><strong>Open Addressing</strong>: in <em>open addressing</em>, when a new entry is inserted, the buckets are examined, starting with the<br>hashed-to-slot and proceeding in some sequence, until an unoccupied slot is found. The name open addressing refers to<br>the fact that the location of an item is not always determined by its hash value</li></ul><p><img src="/images/2019/09/hash.png" alt="Hashing"></p><h3 id="Graph"><a href="#Graph" class="headerlink" title="Graph"></a>Graph</h3><ul><li>A <em>Graph</em> is an ordered pair of G = (V, E) comprising a set V of vertices or nodes together with a set E of edges or arcs,<br>which are 2-element subsets of V (i.e. an edge is associated with two vertices, and that association takes the form of the<br>unordered pair comprising those two vertices)</li><li><strong>Undirected Graph</strong>: a graph in which the adjacency relation is symmetric. So if there exists an edge from node u to node<br>v (u -&gt; v), then it is also the case that there exists an edge from node v to node u (v -&gt; u)</li><li><strong>Directed Graph</strong>: a graph in which the adjacency relation is not symmetric. So if there exists an edge from node u to node v<br>(u -&gt; v), this does <em>not</em> imply that there exists an edge from node v to node u (v -&gt; u)</li></ul><img src="/images/2019/09/graph.png?raw=true" alt="Graph" width="400" height="500"><h2 id="Algorithms"><a href="#Algorithms" class="headerlink" title="Algorithms"></a>Algorithms</h2><h3 id="Sorting"><a href="#Sorting" class="headerlink" title="Sorting"></a>Sorting</h3><h4 id="Quicksort"><a href="#Quicksort" class="headerlink" title="Quicksort"></a>Quicksort</h4><ul><li>Stable: <code>No</code></li><li>Time Complexity:<ul><li>Best Case: <code>O(nlog(n))</code></li><li>Worst Case: <code>O(n^2)</code></li><li>Average Case: <code>O(nlog(n))</code></li></ul></li></ul><p><img src="/images/2019/09/quicksort.gif?raw=true" alt="Quicksort"></p><h4 id="Mergesort"><a href="#Mergesort" class="headerlink" title="Mergesort"></a>Mergesort</h4><ul><li><em>Mergesort</em> is also a divide and conquer algorithm. It continuously divides an array into two halves, recurses on both the<br>left subarray and right subarray and then merges the two sorted halves</li><li>Stable: <code>Yes</code></li><li>Time Complexity:<ul><li>Best Case: <code>O(nlog(n))</code></li><li>Worst Case: <code>O(nlog(n))</code></li><li>Average Case: <code>O(nlog(n))</code></li></ul></li></ul><p><img src="/images/2019/09/mergesort.gif?raw=true" alt="Alt text" title="Mergesort"></p><h4 id="Bucket-Sort"><a href="#Bucket-Sort" class="headerlink" title="Bucket Sort"></a>Bucket Sort</h4><ul><li><em>Bucket Sort</em> is a sorting algorithm that works by distributing the elements of an array into a number of buckets. Each bucket<br>is then sorted individually, either using a different sorting algorithm, or by recursively applying the bucket sorting algorithm</li><li>Time Complexity:<ul><li>Best Case: <code>Ω(n + k)</code></li><li>Worst Case: <code>O(n^2)</code></li><li>Average Case:<code>Θ(n + k)</code></li></ul></li></ul><p><img src="/images/2019/09/bucketsort.png?raw=true" alt="Bucket Sort"></p><h4 id="Radix-Sort"><a href="#Radix-Sort" class="headerlink" title="Radix Sort"></a>Radix Sort</h4><ul><li><em>Radix Sort</em> is a sorting algorithm that like bucket sort, distributes elements of an array into a number of buckets. However, radix<br>sort differs from bucket sort by ‘re-bucketing’ the array after the initial pass as opposed to sorting each bucket and merging</li><li>Time Complexity:<ul><li>Best Case: <code>Ω(nk)</code></li><li>Worst Case: <code>O(nk)</code></li><li>Average Case: <code>Θ(nk)</code></li></ul></li></ul><h3 id="Graph-Algorithms"><a href="#Graph-Algorithms" class="headerlink" title="Graph Algorithms"></a>Graph Algorithms</h3><h4 id="Depth-First-Search"><a href="#Depth-First-Search" class="headerlink" title="Depth First Search"></a>Depth First Search</h4><ul><li><em>Depth First Search</em> is a graph traversal algorithm which explores as far as possible along each branch before backtracking</li><li>Time Complexity: <code>O(|V| + |E|)</code></li></ul><h4 id="Breadth-First-Search"><a href="#Breadth-First-Search" class="headerlink" title="Breadth First Search"></a>Breadth First Search</h4><ul><li><em>Breadth First Search</em> is a graph traversal algorithm which explores the neighbor nodes first, before moving to the next<br>level neighbors</li><li>Time Complexity: <code>O(|V| + |E|)</code></li></ul><p><img src="/images/2019/09/dfsbfs.gif?raw=true" alt="DFS / BFS Traversal"></p><h4 id="Topological-Sort"><a href="#Topological-Sort" class="headerlink" title="Topological Sort"></a>Topological Sort</h4><ul><li><em>Topological Sort</em> is the linear ordering of a directed graph’s nodes such that for every edge from node u to node v, u<br>comes before v in the ordering</li><li>Time Complexity: <code>O(|V| + |E|)</code></li></ul><h4 id="Dijkstra’s-Algorithm"><a href="#Dijkstra’s-Algorithm" class="headerlink" title="Dijkstra’s Algorithm"></a>Dijkstra’s Algorithm</h4><ul><li><em>Dijkstra’s Algorithm</em> is an algorithm for finding the shortest path between nodes in a graph</li><li>Time Complexity: <code>O(|V|^2)</code></li></ul><p><img src="/images/2019/09/dijkstra.gif?raw=true" alt="Dijkstra&#39;s"></p><h4 id="Bellman-Ford-Algorithm"><a href="#Bellman-Ford-Algorithm" class="headerlink" title="Bellman-Ford Algorithm"></a>Bellman-Ford Algorithm</h4><ul><li><em>Bellman-Ford Algorithm</em> is an algorithm that computes the shortest paths from a single source node to all other nodes in a weighted graph</li><li>Although it is slower than Dijkstra’s, it is more versatile, as it is capable of handling graphs in which some of the edge weights are<br>negative numbers</li><li>Time Complexity:<ul><li>Best Case: <code>O(|E|)</code></li><li>Worst Case: <code>O(|V||E|)</code></li></ul></li></ul><p><img src="/images/2019/09/bellman-ford.gif?raw=true" alt="Bellman-Ford"></p><h4 id="Floyd-Warshall-Algorithm"><a href="#Floyd-Warshall-Algorithm" class="headerlink" title="Floyd-Warshall Algorithm"></a>Floyd-Warshall Algorithm</h4><ul><li><em>Floyd-Warshall Algorithm</em> is an algorithm for finding the shortest paths in a weighted graph with positive or negative edge weights, but<br>no negative cycles</li><li>A single execution of the algorithm will find the lengths (summed weights) of the shortest paths between <em>all</em> pairs of nodes</li><li>Time Complexity:<ul><li>Best Case: <code>O(|V|^3)</code></li><li>Worst Case: <code>O(|V|^3)</code></li><li>Average Case: <code>O(|V|^3)</code></li></ul></li></ul><h4 id="Prim’s-Algorithm"><a href="#Prim’s-Algorithm" class="headerlink" title="Prim’s Algorithm"></a>Prim’s Algorithm</h4><ul><li><em>Prim’s Algorithm</em> is a greedy algorithm that finds a minimum spanning tree for a weighted undirected graph. In other words, Prim’s find a<br>subset of edges that forms a tree that includes every node in the graph</li><li>Time Complexity: <code>O(|V|^2)</code></li></ul><p><img src="/images/2019/09/prim.gif?raw=true" alt="Prim&#39;s Algorithm"></p><h4 id="Kruskal’s-Algorithm"><a href="#Kruskal’s-Algorithm" class="headerlink" title="Kruskal’s Algorithm"></a>Kruskal’s Algorithm</h4><ul><li><em>Kruskal’s Algorithm</em> is also a greedy algorithm that finds a minimum spanning tree in a graph. However, in Kruskal’s, the graph does not<br>have to be connected</li><li>Time Complexity: <code>O(|E|log|V|)</code></li></ul><p><img src="/images/2019/09/kruskal.gif?raw=true" alt="Kruskal&#39;s Algorithm"></p><h2 id="Greedy-Algorithms"><a href="#Greedy-Algorithms" class="headerlink" title="Greedy Algorithms"></a>Greedy Algorithms</h2><ul><li><em>Greedy Algorithms</em> are algorithms that make locally optimal choices at each step in the hope of eventually reaching the globally optimal solution</li><li>Problems must exhibit two properties in order to implement a Greedy solution:</li><li>Optimal Substructure<ul><li>An optimal solution to the problem contains optimal solutions to the given problem’s subproblems</li></ul></li><li>The Greedy Property<ul><li>An optimal solution is reached by “greedily” choosing the locally optimal choice without ever reconsidering previous choices</li></ul></li><li>Example - Coin Change<ul><li>Given a target amount V cents and a list of denominations of n coins, i.e. we have coinValue[i] (in cents) for coin types i from [0…n - 1],<br>what is the minimum number of coins that we must use to represent amount V? Assume that we have an unlimited supply of coins of any type</li><li>Coins - Penny (1 cent), Nickel (5 cents), Dime (10 cents), Quarter (25 cents)</li><li>Assume V = 41. We can use the Greedy algorithm of continuously selecting the largest coin denomination less than or equal to V, subtract that<br>coin’s value from V, and repeat.</li><li>V = 41 | 0 coins used</li><li>V = 16 | 1 coin used (41 - 25 = 16)</li><li>V = 6  | 2 coins used (16 - 10 = 6)</li><li>V = 1  | 3 coins used (6 - 5 = 1)</li><li>V = 0  | 4 coins used (1 - 1 = 0)</li><li>Using this algorithm, we arrive at a total of 4 coins which is optimal</li></ul></li></ul><h2 id="Bitmasks"><a href="#Bitmasks" class="headerlink" title="Bitmasks"></a>Bitmasks</h2><ul><li>Bitmasking is a technique used to perform operations at the bit level. Leveraging bitmasks often leads to faster runtime complexity and<br>helps limit memory usage</li><li>Test kth bit: <code>s &amp; (1 &lt;&lt; k);</code></li><li>Set kth bit: <code>s |= (1 &lt;&lt; k);</code></li><li>Turn off kth bit: <code>s &amp;= ~(1 &lt;&lt; k);</code></li><li>Toggle kth bit: <code>s ^= (1 &lt;&lt; k);</code></li><li>Multiple by 2<sup>n</sup>: <code>s &lt;&lt; n;</code></li><li>Divide by 2<sup>n</sup>: <code>s &gt;&gt; n;</code></li><li>Intersection: <code>s &amp; t;</code></li><li>Union: <code>s | t;</code></li><li>Set Subtraction: <code>s &amp; ~t;</code></li><li>Extract lowest set bit: <code>s &amp; (-s);</code></li><li>Extract lowest unset bit: <code>~s &amp; (s + 1);</code></li><li>Swap Values:<pre><code>       <figure class="highlight plaintext" data-lang="plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x ^= y;</span><br><span class="line">y ^= x;</span><br><span class="line">x ^= y;</span><br></pre></td></tr></table></figure></code></pre></li></ul><h2 id="Runtime-Analysis"><a href="#Runtime-Analysis" class="headerlink" title="Runtime Analysis"></a>Runtime Analysis</h2><h4 id="Big-O-Notation"><a href="#Big-O-Notation" class="headerlink" title="Big O Notation"></a>Big O Notation</h4><ul><li><em>Big O Notation</em> is used to describe the upper bound of a particular algorithm. Big O is used to describe worst case scenarios</li></ul><p><img src="/images/2019/09/bigO.png?raw=true" alt="Theta Notation"></p><h4 id="Little-O-Notation"><a href="#Little-O-Notation" class="headerlink" title="Little O Notation"></a>Little O Notation</h4><ul><li><em>Little O Notation</em> is also used to describe an upper bound of a particular algorithm; however, Little O provides a bound<br>that is not asymptotically tight</li></ul><h4 id="Big-Ω-Omega-Notation"><a href="#Big-Ω-Omega-Notation" class="headerlink" title="Big Ω Omega Notation"></a>Big Ω Omega Notation</h4><ul><li><em>Big Omega Notation</em> is used to provide an asymptotic lower bound on a particular algorithm</li></ul><p><img src="/images/2019/09/bigOmega.png?raw=true" alt="Theta Notation"></p><h4 id="Little-ω-Omega-Notation"><a href="#Little-ω-Omega-Notation" class="headerlink" title="Little ω Omega Notation"></a>Little ω Omega Notation</h4><ul><li><em>Little Omega Notation</em> is used to provide a lower bound on a particular algorithm that is not asymptotically tight</li></ul><h4 id="Theta-Θ-Notation"><a href="#Theta-Θ-Notation" class="headerlink" title="Theta Θ Notation"></a>Theta Θ Notation</h4><ul><li><em>Theta Notation</em> is used to provide a bound on a particular algorithm such that it can be “sandwiched” between<br>two constants (one for an upper limit and one for a lower limit) for sufficiently large values</li></ul><p><img src="/images/2019/09/theta.png?raw=true%22" alt="Theta Notation"></p><h2 id="Video-Lectures"><a href="#Video-Lectures" class="headerlink" title="Video Lectures"></a>Video Lectures</h2><ul><li>Data Structures<ul><li><a href="https://archive.org/details/ucberkeley-webcast?&and%5B%5D=subject:%22Computer%20Science%22&and%5B%5D=subject:%22CS%22">UC Berkeley Data Structures</a></li><li><a href="https://www.youtube.com/watch?v=T0yzrZL1py0&list=PLUl4u3cNGP61hsJNdULdudlRL493b-XZf&index=1">MIT Advanced Data Structures</a></li></ul></li><li>Algorithms<ul><li><a href="https://www.youtube.com/watch?v=HtSuA80QTyo&list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&index=1">MIT Introduction to Algorithms</a></li><li><a href="https://www.youtube.com/playlist?list=PL6ogFv-ieghdoGKGg2Bik3Gl1glBTEu8c">MIT Advanced Algorithms</a></li><li><a href="https://archive.org/details/ucberkeley-webcast?&and%5B%5D=subject:%22Computer%20Science%22&and%5B%5D=subject:%22CS%22">UC Berkeley Algorithms</a></li></ul></li></ul><h2 id="Interview-Books"><a href="#Interview-Books" class="headerlink" title="Interview Books"></a>Interview Books</h2><ul><li><a href="https://www.amazon.com/Competitive-Programming-3rd-Steven-Halim/dp/B00FG8MNN8">Competitive Programming 3 - Steven Halim &amp; Felix Halim</a> </li><li><a href="https://www.amazon.com/Cracking-Coding-Interview-Programming-Questions/dp/0984782850/ref=sr_1_1?s=books&ie=UTF8">Cracking The Coding Interview - Gayle Laakmann McDowell</a></li><li><a href="https://www.amazon.com/Cracking-PM-Interview-Product-Technology-ebook/dp/B00ISYMUR6/ref=sr_1_1?s=books&ie=UTF8">Cracking The PM Interview - Gayle Laakmann McDowell &amp; Jackie Bavaro</a></li><li><a href="https://www.amazon.com/Introduction-Algorithms-3rd-MIT-Press/dp/0262033844/ref=sr_1_1?ie=UTF8&qid=1490295989&sr=8-1&keywords=Introduction+to+Algorithms">Introduction to Algorithms -  Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest &amp; Clifford Stein</a></li></ul><h2 id="Computer-Science-News"><a href="#Computer-Science-News" class="headerlink" title="Computer Science News"></a>Computer Science News</h2><ul><li><a href="https://news.ycombinator.com/">Hacker News</a></li><li><a href="https://lobste.rs/">Lobsters</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Interviews&quot;&gt;&lt;a href=&quot;#Interviews&quot; class=&quot;headerlink&quot; title=&quot;Interviews&quot;&gt;&lt;/a&gt;Interviews&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Maintainer - &lt;a href=&quot;htt</summary>
      
    
    
    
    <category term="编程基础" scheme="https://www.chaoswork.cn/categories/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
    <category term="数据结构与算法" scheme="https://www.chaoswork.cn/categories/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="编程基础" scheme="https://www.chaoswork.cn/tags/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
    <category term="算法" scheme="https://www.chaoswork.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="面试资料" scheme="https://www.chaoswork.cn/tags/%E9%9D%A2%E8%AF%95%E8%B5%84%E6%96%99/"/>
    
  </entry>
  
  <entry>
    <title>基本算法复杂度统计</title>
    <link href="https://www.chaoswork.cn/20190918-1.html"/>
    <id>https://www.chaoswork.cn/20190918-1.html</id>
    <published>2019-09-18T08:51:24.000Z</published>
    <updated>2021-03-11T10:04:17.391Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Big-O-Notation"><a href="#Big-O-Notation" class="headerlink" title="Big O Notation"></a>Big O Notation</h3><p><em>Big O notation</em> is used to classify algorithms according to how their running time or space requirements grow as the input size grows.<br>On the chart below you may find most common orders of growth of algorithms specified in Big O notation.</p><p><img src="/images/2019/09/big-o-graph.png" alt="Big O graphs"></p><p>Source: <a href="http://bigocheatsheet.com/">Big O Cheat Sheet</a>.</p><p>Below is the list of some of the most used Big O notations and their performance comparisons against different sizes of the input data.</p><table><thead><tr><th>Big O Notation</th><th>Computations for 10 elements</th><th>Computations for 100 elements</th><th>Computations for 1000 elements</th></tr></thead><tbody><tr><td><strong>O(1)</strong></td><td>1</td><td>1</td><td>1</td></tr><tr><td><strong>O(log N)</strong></td><td>3</td><td>6</td><td>9</td></tr><tr><td><strong>O(N)</strong></td><td>10</td><td>100</td><td>1000</td></tr><tr><td><strong>O(N log N)</strong></td><td>30</td><td>600</td><td>9000</td></tr><tr><td><strong>O(N^2)</strong></td><td>100</td><td>10000</td><td>1000000</td></tr><tr><td><strong>O(2^N)</strong></td><td>1024</td><td>1.26e+29</td><td>1.07e+301</td></tr><tr><td><strong>O(N!)</strong></td><td>3628800</td><td>9.3e+157</td><td>4.02e+2567</td></tr></tbody></table><h3 id="Data-Structure-Operations-Complexity"><a href="#Data-Structure-Operations-Complexity" class="headerlink" title="Data Structure Operations Complexity"></a>Data Structure Operations Complexity</h3><table><thead><tr><th>Data Structure</th><th align="center">Access</th><th align="center">Search</th><th align="center">Insertion</th><th align="center">Deletion</th><th align="left">Comments</th></tr></thead><tbody><tr><td><strong>Array</strong></td><td align="center">1</td><td align="center">n</td><td align="center">n</td><td align="center">n</td><td align="left"></td></tr><tr><td><strong>Stack</strong></td><td align="center">n</td><td align="center">n</td><td align="center">1</td><td align="center">1</td><td align="left"></td></tr><tr><td><strong>Queue</strong></td><td align="center">n</td><td align="center">n</td><td align="center">1</td><td align="center">1</td><td align="left"></td></tr><tr><td><strong>Linked List</strong></td><td align="center">n</td><td align="center">n</td><td align="center">1</td><td align="center">n</td><td align="left"></td></tr><tr><td><strong>Hash Table</strong></td><td align="center">-</td><td align="center">n</td><td align="center">n</td><td align="center">n</td><td align="left">In case of perfect hash function costs would be O(1)</td></tr><tr><td><strong>Binary Search Tree</strong></td><td align="center">n</td><td align="center">n</td><td align="center">n</td><td align="center">n</td><td align="left">In case of balanced tree costs would be O(log(n))</td></tr><tr><td><strong>B-Tree</strong></td><td align="center">log(n)</td><td align="center">log(n)</td><td align="center">log(n)</td><td align="center">log(n)</td><td align="left"></td></tr><tr><td><strong>Red-Black Tree</strong></td><td align="center">log(n)</td><td align="center">log(n)</td><td align="center">log(n)</td><td align="center">log(n)</td><td align="left"></td></tr><tr><td><strong>AVL Tree</strong></td><td align="center">log(n)</td><td align="center">log(n)</td><td align="center">log(n)</td><td align="center">log(n)</td><td align="left"></td></tr><tr><td><strong>Bloom Filter</strong></td><td align="center">-</td><td align="center">1</td><td align="center">1</td><td align="center">-</td><td align="left">False positives are possible while searching</td></tr></tbody></table><h3 id="Array-Sorting-Algorithms-Complexity"><a href="#Array-Sorting-Algorithms-Complexity" class="headerlink" title="Array Sorting Algorithms Complexity"></a>Array Sorting Algorithms Complexity</h3><table><thead><tr><th>Name</th><th align="center">Best</th><th align="center">Average</th><th align="center">Worst</th><th align="center">Memory</th><th align="center">Stable</th><th align="left">Comments</th></tr></thead><tbody><tr><td><strong>Bubble sort</strong></td><td align="center">n</td><td align="center">n<sup>2</sup></td><td align="center">n<sup>2</sup></td><td align="center">1</td><td align="center">Yes</td><td align="left"></td></tr><tr><td><strong>Insertion sort</strong></td><td align="center">n</td><td align="center">n<sup>2</sup></td><td align="center">n<sup>2</sup></td><td align="center">1</td><td align="center">Yes</td><td align="left"></td></tr><tr><td><strong>Selection sort</strong></td><td align="center">n<sup>2</sup></td><td align="center">n<sup>2</sup></td><td align="center">n<sup>2</sup></td><td align="center">1</td><td align="center">No</td><td align="left"></td></tr><tr><td><strong>Heap sort</strong></td><td align="center">n&nbsp;log(n)</td><td align="center">n&nbsp;log(n)</td><td align="center">n&nbsp;log(n)</td><td align="center">1</td><td align="center">No</td><td align="left"></td></tr><tr><td><strong>Merge sort</strong></td><td align="center">n&nbsp;log(n)</td><td align="center">n&nbsp;log(n)</td><td align="center">n&nbsp;log(n)</td><td align="center">n</td><td align="center">Yes</td><td align="left"></td></tr><tr><td><strong>Quick sort</strong></td><td align="center">n&nbsp;log(n)</td><td align="center">n&nbsp;log(n)</td><td align="center">n<sup>2</sup></td><td align="center">log(n)</td><td align="center">No</td><td align="left">Quicksort is usually done in-place with O(log(n)) stack space</td></tr><tr><td><strong>Shell sort</strong></td><td align="center">n&nbsp;log(n)</td><td align="center">depends on gap sequence</td><td align="center">n&nbsp;(log(n))<sup>2</sup></td><td align="center">1</td><td align="center">No</td><td align="left"></td></tr><tr><td><strong>Counting sort</strong></td><td align="center">n + r</td><td align="center">n + r</td><td align="center">n + r</td><td align="center">n + r</td><td align="center">Yes</td><td align="left">r - biggest number in array</td></tr><tr><td><strong>Radix sort</strong></td><td align="center">n * k</td><td align="center">n * k</td><td align="center">n * k</td><td align="center">n + k</td><td align="center">Yes</td><td align="left">k - length of longest key</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Big-O-Notation&quot;&gt;&lt;a href=&quot;#Big-O-Notation&quot; class=&quot;headerlink&quot; title=&quot;Big O Notation&quot;&gt;&lt;/a&gt;Big O Notation&lt;/h3&gt;&lt;p&gt;&lt;em&gt;Big O notation&lt;/em</summary>
      
    
    
    
    <category term="编程基础" scheme="https://www.chaoswork.cn/categories/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
    <category term="数据结构与算法" scheme="https://www.chaoswork.cn/categories/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="编程基础" scheme="https://www.chaoswork.cn/tags/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
    <category term="算法" scheme="https://www.chaoswork.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="算法复杂度" scheme="https://www.chaoswork.cn/tags/%E7%AE%97%E6%B3%95%E5%A4%8D%E6%9D%82%E5%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>linux命令netstat的几个用法</title>
    <link href="https://www.chaoswork.cn/20190726-1.html"/>
    <id>https://www.chaoswork.cn/20190726-1.html</id>
    <published>2019-07-26T06:44:11.000Z</published>
    <updated>2021-03-11T10:04:17.391Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Netstat-简介"><a href="#Netstat-简介" class="headerlink" title="Netstat 简介"></a>Netstat 简介</h2><p>Netstat 是linux下的一款命令行工具，可用于列出系统上所有的网络套接字连接情况，包括 tcp, udp 以及 unix 套接字，还能列出处于监听状态（即等待接入请求）的套接字。如果你想查看系统某一个端口是否被占用，就可以用<code>netstat</code>命令。另外<code>netstat</code>还可以列出本机路由信息和网络接口信息等。</p><h2 id="1-列出网络连接"><a href="#1-列出网络连接" class="headerlink" title="1. 列出网络连接"></a>1. 列出网络连接</h2><figure class="highlight sh" data-lang="sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -antuple</span><br></pre></td></tr></table></figure><p>由于netstat命令参数比较多，查看网络连接相关，常用的就是上面这些， 这里为了方便记忆组合了下：an tuple, 两个简单的英文单词～</p><p><strong>参数说明：</strong></p><ul><li>-a: –all, 显示所有连接的socket (默认: connected)</li><li>-n: –numeric, 不解析名称，包括主机名，端口名和用户名</li><li>-t: –tcp, 只显示tcp连接</li><li>-u: –udp, 只显示udp连接</li><li>-p: –programs, 显示连接进程的PID或进程名</li><li>-l: –listening, 显示正在监听的socket</li><li>-e: –extend, 显示更多信息,包括连接进程的用户名等</li></ul><p><strong>注意：</strong></p><ol><li>将 -n 和 -e 选项一起使用，会列出用户的 ID 号，而不是用户名。</li><li>使用 -p 选项时，netstat 必须运行在 root 权限之下，不然它就不能得到运行在 root 权限下的进程名，而很多服务包括 http 和 ftp 都运行在 root 权限之下。</li></ol><h2 id="2-显示内核路由信息"><a href="#2-显示内核路由信息" class="headerlink" title="2. 显示内核路由信息"></a>2. 显示内核路由信息</h2><figure class="highlight sh" data-lang="sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -rn</span><br></pre></td></tr></table></figure><p>使用 -r 选项打印内核路由信息。打印出来的信息与 route 命令输出的信息一样。也可以使用 -n 选项禁止名称解析。</p><p><strong>参数说明：</strong></p><ul><li>-r: –route, 显示内核路由信息</li><li>-n: 与上面相同</li></ul><h2 id="3-显示网络接口信息"><a href="#3-显示网络接口信息" class="headerlink" title="3. 显示网络接口信息"></a>3. 显示网络接口信息</h2><figure class="highlight sh" data-lang="sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ie</span><br></pre></td></tr></table></figure><p>使用 -i 选项可以输出网络接口信息， 但是输出的信息比较原始。搭配 -e 选项，可以输出用户友好的信息，输出结果与 ifconfig 一样。</p><p><strong>参数说明：</strong></p><ul><li>-i: –interfaces, 显示网络接口信息</li><li>-e: 与上面相同</li></ul><h2 id="4-其他选项"><a href="#4-其他选项" class="headerlink" title="4. 其他选项"></a>4. 其他选项</h2><ul><li>-s: –statistics, 显示统计数据</li><li>-g: –groups, 显示多播，组播信息</li><li>-c: –continuous, 持续打印信息</li></ul><h2 id="5-用法举例"><a href="#5-用法举例" class="headerlink" title="5. 用法举例"></a>5. 用法举例</h2><h3 id="5-1-打印-active-状态的连接"><a href="#5-1-打印-active-状态的连接" class="headerlink" title="5.1 打印 active 状态的连接"></a>5.1 打印 active 状态的连接</h3><p>active 状态的套接字连接用 “ESTABLISHED” 字段表示，所以我们可以使用 grep 命令获得 active 状态的连接：</p><figure class="highlight sh" data-lang="sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ netstat -atnp | grep ESTA</span><br><span class="line">(Not all processes could be identified, non-owned process info</span><br><span class="line">will not be shown, you would have to be root to see it all.)</span><br><span class="line">tcp 0 0 192.168.1.2:49156 173.255.230.5:80 ESTABLISHED 1691/chrome</span><br><span class="line">tcp 0 0 192.168.1.2:33324 173.194.36.117:443 ESTABLISHED 1691/chrome</span><br></pre></td></tr></table></figure><p>配合 watch 命令监视 active 状态的连接：</p><figure class="highlight sh" data-lang="sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ watch -d -n0 <span class="string">&quot;netstat -atnp | grep ESTA&quot;</span></span><br></pre></td></tr></table></figure><h3 id="5-2-查看服务是否在运行"><a href="#5-2-查看服务是否在运行" class="headerlink" title="5.2 查看服务是否在运行"></a>5.2 查看服务是否在运行</h3><p>比如查看mysql服务：</p><figure class="highlight sh" data-lang="sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo netstat -anple | grep mysql</span><br><span class="line">tcp6       0      0 :::3306                 :::*                    LISTEN      122        26837       1041/mysqld     </span><br><span class="line">unix  2      [ ACC ]     STREAM     LISTENING     26838    1041/mysqld         /var/run/mysqld/mysqld.sock</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     26817    1041/mysqld</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Netstat-简介&quot;&gt;&lt;a href=&quot;#Netstat-简介&quot; class=&quot;headerlink&quot; title=&quot;Netstat 简介&quot;&gt;&lt;/a&gt;Netstat 简介&lt;/h2&gt;&lt;p&gt;Netstat 是linux下的一款命令行工具，可用于列出系统上所有的网络套</summary>
      
    
    
    
    <category term="编程基础" scheme="https://www.chaoswork.cn/categories/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
    <category term="linux基础" scheme="https://www.chaoswork.cn/categories/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/linux%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="编程基础" scheme="https://www.chaoswork.cn/tags/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
    <category term="linux基础" scheme="https://www.chaoswork.cn/tags/linux%E5%9F%BA%E7%A1%80/"/>
    
    <category term="netstat" scheme="https://www.chaoswork.cn/tags/netstat/"/>
    
  </entry>
  
  <entry>
    <title>sequelize引起mysql错误：Too many keys specified. Max 64 keys allowed</title>
    <link href="https://www.chaoswork.cn/20190724-1.html"/>
    <id>https://www.chaoswork.cn/20190724-1.html</id>
    <published>2019-07-24T14:22:08.000Z</published>
    <updated>2021-03-11T10:04:17.391Z</updated>
    
    <content type="html"><![CDATA[<p>一个项目中使用sequelize作为mysql的ORM，项目已经发布运行快一个月了，最近查看日志，发现了如标题中的mysql错误，让我感觉十分莫名其妙。进入mysql控制台一看，简直吓一跳，几乎所有的表都一堆的unique index，这还怎么玩！</p><p>赶紧想办法解决，一个个删肯定不可取，况且表的创建和修改都是sequelize自动执行的，你删了它再给你加。经过多方查找，发觉这是sequelize早已存在的一个BUG：如果用<code>column: &#123;unique: true&#125;</code>，当执行sequelize.sync({alter: true})的时候，每次执行都会新加一个index (column, column_2, column_3, …)， 蛋疼无比， sequelize官方也真够任性的，就是不改。</p><p>还好的是，sequelize也提供了一个解决办法：</p><figure class="highlight plaintext" data-lang="plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`column: &#123;unique:  ‘column’ &#125;`</span><br></pre></td></tr></table></figure><p><strong>不要用<code>unique: true</code>!!!</strong></p><p>已经创建的海量的unique索引怎么办？用下面的语句来配合删除：</p><figure class="highlight sql" data-lang="sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> CONCAT(<span class="string">&#x27;ALTER TABLE &#x27;</span>,i.TABLE_NAME,<span class="string">&#x27; DROP INDEX &#x27;</span>,i.INDEX_NAME,<span class="string">&#x27; ;&#x27;</span>) </span><br><span class="line"><span class="keyword">FROM</span> INFORMATION_SCHEMA.STATISTICS i <span class="keyword">WHERE</span> TABLE_SCHEMA <span class="operator">=</span> <span class="string">&#x27;库名&#x27;</span> <span class="keyword">AND</span> i.INDEX_NAME <span class="operator">&lt;&gt;</span> <span class="string">&#x27;PRIMARY&#x27;</span>;</span><br></pre></td></tr></table></figure><p>上面的语句会输出指定的库中所有表的非主键索引的删除语句，如：</p><figure class="highlight sql" data-lang="sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="keyword">user</span> <span class="keyword">DROP</span> INDEX username ;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="keyword">user</span> <span class="keyword">DROP</span> INDEX username_2 ;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="keyword">user</span> <span class="keyword">DROP</span> INDEX username_3 ;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="keyword">user</span> <span class="keyword">DROP</span> INDEX username_4 ;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="keyword">user</span> <span class="keyword">DROP</span> INDEX username_5 ;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="keyword">user</span> <span class="keyword">DROP</span> INDEX username_6 ;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="keyword">user</span> <span class="keyword">DROP</span> INDEX username_7 ;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="keyword">user</span> <span class="keyword">DROP</span> INDEX username_8 ;</span><br></pre></td></tr></table></figure><p>将输出拷贝下来，过滤掉不需要删除的，将剩余的需要执行的语句拷贝到mysql控制台执行，就万事大吉啦。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一个项目中使用sequelize作为mysql的ORM，项目已经发布运行快一个月了，最近查看日志，发现了如标题中的mysql错误，让我感觉十分莫名其妙。进入mysql控制台一看，简直吓一跳，几乎所有的表都一堆的unique index，这还怎么玩！&lt;/p&gt;
&lt;p&gt;赶紧想办法</summary>
      
    
    
    
    <category term="经验教程" scheme="https://www.chaoswork.cn/categories/%E7%BB%8F%E9%AA%8C%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="mysql" scheme="https://www.chaoswork.cn/tags/mysql/"/>
    
    <category term="sequelize" scheme="https://www.chaoswork.cn/tags/sequelize/"/>
    
  </entry>
  
</feed>
